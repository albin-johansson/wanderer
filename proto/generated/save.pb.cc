// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: save.proto

#include "save.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace wanderer {
namespace protobuf {
constexpr level_MovablesEntry_DoNotUse::level_MovablesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_MovablesEntry_DoNotUseDefaultTypeInternal {
  constexpr level_MovablesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_MovablesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_MovablesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_MovablesEntry_DoNotUseDefaultTypeInternal _level_MovablesEntry_DoNotUse_default_instance_;
constexpr level_DrawablesEntry_DoNotUse::level_DrawablesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_DrawablesEntry_DoNotUseDefaultTypeInternal {
  constexpr level_DrawablesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_DrawablesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_DrawablesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_DrawablesEntry_DoNotUseDefaultTypeInternal _level_DrawablesEntry_DoNotUse_default_instance_;
constexpr level_AnimationsEntry_DoNotUse::level_AnimationsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_AnimationsEntry_DoNotUseDefaultTypeInternal {
  constexpr level_AnimationsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_AnimationsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_AnimationsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_AnimationsEntry_DoNotUseDefaultTypeInternal _level_AnimationsEntry_DoNotUse_default_instance_;
constexpr level_PlantsEntry_DoNotUse::level_PlantsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_PlantsEntry_DoNotUseDefaultTypeInternal {
  constexpr level_PlantsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_PlantsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_PlantsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_PlantsEntry_DoNotUseDefaultTypeInternal _level_PlantsEntry_DoNotUse_default_instance_;
constexpr level_TilesEntry_DoNotUse::level_TilesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_TilesEntry_DoNotUseDefaultTypeInternal {
  constexpr level_TilesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_TilesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_TilesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_TilesEntry_DoNotUseDefaultTypeInternal _level_TilesEntry_DoNotUse_default_instance_;
constexpr level_TilemapsEntry_DoNotUse::level_TilemapsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_TilemapsEntry_DoNotUseDefaultTypeInternal {
  constexpr level_TilemapsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_TilemapsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_TilemapsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_TilemapsEntry_DoNotUseDefaultTypeInternal _level_TilemapsEntry_DoNotUse_default_instance_;
constexpr level_TileAnimationsEntry_DoNotUse::level_TileAnimationsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_TileAnimationsEntry_DoNotUseDefaultTypeInternal {
  constexpr level_TileAnimationsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_TileAnimationsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_TileAnimationsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_TileAnimationsEntry_DoNotUseDefaultTypeInternal _level_TileAnimationsEntry_DoNotUse_default_instance_;
constexpr level_ChasesEntry_DoNotUse::level_ChasesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_ChasesEntry_DoNotUseDefaultTypeInternal {
  constexpr level_ChasesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_ChasesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_ChasesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_ChasesEntry_DoNotUseDefaultTypeInternal _level_ChasesEntry_DoNotUse_default_instance_;
constexpr level_ParticlesEntry_DoNotUse::level_ParticlesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_ParticlesEntry_DoNotUseDefaultTypeInternal {
  constexpr level_ParticlesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_ParticlesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_ParticlesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_ParticlesEntry_DoNotUseDefaultTypeInternal _level_ParticlesEntry_DoNotUse_default_instance_;
constexpr level_LightsEntry_DoNotUse::level_LightsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_LightsEntry_DoNotUseDefaultTypeInternal {
  constexpr level_LightsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_LightsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_LightsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_LightsEntry_DoNotUseDefaultTypeInternal _level_LightsEntry_DoNotUse_default_instance_;
constexpr level_SpawnpointsEntry_DoNotUse::level_SpawnpointsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_SpawnpointsEntry_DoNotUseDefaultTypeInternal {
  constexpr level_SpawnpointsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_SpawnpointsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_SpawnpointsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_SpawnpointsEntry_DoNotUseDefaultTypeInternal _level_SpawnpointsEntry_DoNotUse_default_instance_;
constexpr level_HitboxesEntry_DoNotUse::level_HitboxesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_HitboxesEntry_DoNotUseDefaultTypeInternal {
  constexpr level_HitboxesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_HitboxesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_HitboxesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_HitboxesEntry_DoNotUseDefaultTypeInternal _level_HitboxesEntry_DoNotUse_default_instance_;
constexpr level_ObjectsEntry_DoNotUse::level_ObjectsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_ObjectsEntry_DoNotUseDefaultTypeInternal {
  constexpr level_ObjectsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_ObjectsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_ObjectsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_ObjectsEntry_DoNotUseDefaultTypeInternal _level_ObjectsEntry_DoNotUse_default_instance_;
constexpr level_PortalsEntry_DoNotUse::level_PortalsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_PortalsEntry_DoNotUseDefaultTypeInternal {
  constexpr level_PortalsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_PortalsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_PortalsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_PortalsEntry_DoNotUseDefaultTypeInternal _level_PortalsEntry_DoNotUse_default_instance_;
constexpr level_TileLayersEntry_DoNotUse::level_TileLayersEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_TileLayersEntry_DoNotUseDefaultTypeInternal {
  constexpr level_TileLayersEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_TileLayersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_TileLayersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_TileLayersEntry_DoNotUseDefaultTypeInternal _level_TileLayersEntry_DoNotUse_default_instance_;
constexpr level_TilesetsEntry_DoNotUse::level_TilesetsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_TilesetsEntry_DoNotUseDefaultTypeInternal {
  constexpr level_TilesetsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_TilesetsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_TilesetsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_TilesetsEntry_DoNotUseDefaultTypeInternal _level_TilesetsEntry_DoNotUse_default_instance_;
constexpr level_InventoriesEntry_DoNotUse::level_InventoriesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_InventoriesEntry_DoNotUseDefaultTypeInternal {
  constexpr level_InventoriesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_InventoriesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_InventoriesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_InventoriesEntry_DoNotUseDefaultTypeInternal _level_InventoriesEntry_DoNotUse_default_instance_;
constexpr level_TileObjectsEntry_DoNotUse::level_TileObjectsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_TileObjectsEntry_DoNotUseDefaultTypeInternal {
  constexpr level_TileObjectsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_TileObjectsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_TileObjectsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_TileObjectsEntry_DoNotUseDefaultTypeInternal _level_TileObjectsEntry_DoNotUse_default_instance_;
constexpr level_TriggersEntry_DoNotUse::level_TriggersEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_TriggersEntry_DoNotUseDefaultTypeInternal {
  constexpr level_TriggersEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_TriggersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_TriggersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_TriggersEntry_DoNotUseDefaultTypeInternal _level_TriggersEntry_DoNotUse_default_instance_;
constexpr level_AssociationsEntry_DoNotUse::level_AssociationsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct level_AssociationsEntry_DoNotUseDefaultTypeInternal {
  constexpr level_AssociationsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~level_AssociationsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    level_AssociationsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT level_AssociationsEntry_DoNotUseDefaultTypeInternal _level_AssociationsEntry_DoNotUse_default_instance_;
constexpr level::level(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entities_()
  , _entities_cached_byte_size_(0)
  , movables_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , drawables_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , animations_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , plants_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , tiles_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , tilemaps_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , tile_animations_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , chases_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , particles_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , lights_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , spawnpoints_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , hitboxes_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , objects_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , portals_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , tile_layers_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , tilesets_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , inventories_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , tile_objects_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , triggers_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , associations_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , humanoids_()
  , _humanoids_cached_byte_size_(0)
  , id_(0)
  , player_entity_(0u)
  , keep_viewport_in_bounds_(false)
  , is_outside_level_(false){}
struct levelDefaultTypeInternal {
  constexpr levelDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~levelDefaultTypeInternal() {}
  union {
    level _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT levelDefaultTypeInternal _level_default_instance_;
constexpr shared_data::shared_data(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : time_(nullptr){}
struct shared_dataDefaultTypeInternal {
  constexpr shared_dataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~shared_dataDefaultTypeInternal() {}
  union {
    shared_data _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT shared_dataDefaultTypeInternal _shared_data_default_instance_;
constexpr save::save(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : levels_()
  , shared_(nullptr)
  , current_level_id_(0){}
struct saveDefaultTypeInternal {
  constexpr saveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~saveDefaultTypeInternal() {}
  union {
    save _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT saveDefaultTypeInternal _save_default_instance_;
}  // namespace protobuf
}  // namespace wanderer
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_save_2eproto[23];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_save_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_save_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_save_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_MovablesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_MovablesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_MovablesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_MovablesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_DrawablesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_DrawablesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_DrawablesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_DrawablesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_AnimationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_AnimationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_AnimationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_AnimationsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_PlantsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_PlantsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_PlantsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_PlantsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilemapsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilemapsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilemapsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilemapsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileAnimationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileAnimationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileAnimationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileAnimationsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ChasesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ChasesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ChasesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ChasesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ParticlesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ParticlesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ParticlesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ParticlesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_LightsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_LightsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_LightsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_LightsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_SpawnpointsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_SpawnpointsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_SpawnpointsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_SpawnpointsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_HitboxesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_HitboxesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_HitboxesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_HitboxesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ObjectsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ObjectsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ObjectsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_ObjectsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_PortalsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_PortalsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_PortalsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_PortalsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileLayersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileLayersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileLayersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileLayersEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilesetsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilesetsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilesetsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TilesetsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_InventoriesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_InventoriesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_InventoriesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_InventoriesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileObjectsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileObjectsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileObjectsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TileObjectsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TriggersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TriggersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TriggersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_TriggersEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_AssociationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_AssociationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_AssociationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level_AssociationsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, id_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, entities_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, movables_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, drawables_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, animations_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, plants_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, tiles_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, tilemaps_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, tile_animations_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, chases_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, particles_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, lights_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, spawnpoints_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, hitboxes_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, objects_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, portals_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, tile_layers_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, tilesets_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, inventories_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, tile_objects_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, triggers_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, associations_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, player_entity_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, humanoids_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, keep_viewport_in_bounds_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::level, is_outside_level_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  ~0u,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::shared_data, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::shared_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::shared_data, time_),
  0,
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::save, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::save, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::save, current_level_id_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::save, shared_),
  PROTOBUF_FIELD_OFFSET(::wanderer::protobuf::save, levels_),
  1,
  0,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::wanderer::protobuf::level_MovablesEntry_DoNotUse)},
  { 10, 18, -1, sizeof(::wanderer::protobuf::level_DrawablesEntry_DoNotUse)},
  { 20, 28, -1, sizeof(::wanderer::protobuf::level_AnimationsEntry_DoNotUse)},
  { 30, 38, -1, sizeof(::wanderer::protobuf::level_PlantsEntry_DoNotUse)},
  { 40, 48, -1, sizeof(::wanderer::protobuf::level_TilesEntry_DoNotUse)},
  { 50, 58, -1, sizeof(::wanderer::protobuf::level_TilemapsEntry_DoNotUse)},
  { 60, 68, -1, sizeof(::wanderer::protobuf::level_TileAnimationsEntry_DoNotUse)},
  { 70, 78, -1, sizeof(::wanderer::protobuf::level_ChasesEntry_DoNotUse)},
  { 80, 88, -1, sizeof(::wanderer::protobuf::level_ParticlesEntry_DoNotUse)},
  { 90, 98, -1, sizeof(::wanderer::protobuf::level_LightsEntry_DoNotUse)},
  { 100, 108, -1, sizeof(::wanderer::protobuf::level_SpawnpointsEntry_DoNotUse)},
  { 110, 118, -1, sizeof(::wanderer::protobuf::level_HitboxesEntry_DoNotUse)},
  { 120, 128, -1, sizeof(::wanderer::protobuf::level_ObjectsEntry_DoNotUse)},
  { 130, 138, -1, sizeof(::wanderer::protobuf::level_PortalsEntry_DoNotUse)},
  { 140, 148, -1, sizeof(::wanderer::protobuf::level_TileLayersEntry_DoNotUse)},
  { 150, 158, -1, sizeof(::wanderer::protobuf::level_TilesetsEntry_DoNotUse)},
  { 160, 168, -1, sizeof(::wanderer::protobuf::level_InventoriesEntry_DoNotUse)},
  { 170, 178, -1, sizeof(::wanderer::protobuf::level_TileObjectsEntry_DoNotUse)},
  { 180, 188, -1, sizeof(::wanderer::protobuf::level_TriggersEntry_DoNotUse)},
  { 190, 198, -1, sizeof(::wanderer::protobuf::level_AssociationsEntry_DoNotUse)},
  { 200, 232, -1, sizeof(::wanderer::protobuf::level)},
  { 258, 265, -1, sizeof(::wanderer::protobuf::shared_data)},
  { 266, 275, -1, sizeof(::wanderer::protobuf::save)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_MovablesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_DrawablesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_AnimationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_PlantsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_TilesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_TilemapsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_TileAnimationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_ChasesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_ParticlesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_LightsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_SpawnpointsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_HitboxesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_ObjectsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_PortalsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_TileLayersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_TilesetsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_InventoriesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_TileObjectsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_TriggersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_AssociationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_level_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_shared_data_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::protobuf::_save_default_instance_),
};

const char descriptor_table_protodef_save_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nsave.proto\022\021wanderer.protobuf\032\016animate"
  "d.proto\032\027associated_entity.proto\032\013chase."
  "proto\032\024depth_drawable.proto\032\014hitbox.prot"
  "o\032\017inventory.proto\032\rmovable.proto\032\014objec"
  "t.proto\032\016particle.proto\032\013plant.proto\032\021po"
  "int_light.proto\032\014portal.proto\032\020spawnpoin"
  "t.proto\032\024tile_animation.proto\032\020tile_laye"
  "r.proto\032\ntile.proto\032\021tile_object.proto\032\r"
  "tilemap.proto\032\rtileset.proto\032\021time_of_da"
  "y.proto\032\rtrigger.proto\"\315\027\n\005level\022\017\n\002id\030\001"
  " \001(\005H\000\210\001\001\022\024\n\010entities\030\002 \003(\rB\002\020\001\0228\n\010movab"
  "les\030\003 \003(\0132&.wanderer.protobuf.level.Mova"
  "blesEntry\022:\n\tdrawables\030\004 \003(\0132\'.wanderer."
  "protobuf.level.DrawablesEntry\022<\n\nanimati"
  "ons\030\005 \003(\0132(.wanderer.protobuf.level.Anim"
  "ationsEntry\0224\n\006plants\030\006 \003(\0132$.wanderer.p"
  "rotobuf.level.PlantsEntry\0222\n\005tiles\030\007 \003(\013"
  "2#.wanderer.protobuf.level.TilesEntry\0228\n"
  "\010tilemaps\030\010 \003(\0132&.wanderer.protobuf.leve"
  "l.TilemapsEntry\022E\n\017tile_animations\030\t \003(\013"
  "2,.wanderer.protobuf.level.TileAnimation"
  "sEntry\0224\n\006chases\030\n \003(\0132$.wanderer.protob"
  "uf.level.ChasesEntry\022:\n\tparticles\030\013 \003(\0132"
  "\'.wanderer.protobuf.level.ParticlesEntry"
  "\0224\n\006lights\030\014 \003(\0132$.wanderer.protobuf.lev"
  "el.LightsEntry\022>\n\013spawnpoints\030\r \003(\0132).wa"
  "nderer.protobuf.level.SpawnpointsEntry\0228"
  "\n\010hitboxes\030\016 \003(\0132&.wanderer.protobuf.lev"
  "el.HitboxesEntry\0226\n\007objects\030\017 \003(\0132%.wand"
  "erer.protobuf.level.ObjectsEntry\0226\n\007port"
  "als\030\020 \003(\0132%.wanderer.protobuf.level.Port"
  "alsEntry\022=\n\013tile_layers\030\021 \003(\0132(.wanderer"
  ".protobuf.level.TileLayersEntry\0228\n\010tiles"
  "ets\030\022 \003(\0132&.wanderer.protobuf.level.Tile"
  "setsEntry\022>\n\013inventories\030\023 \003(\0132).wandere"
  "r.protobuf.level.InventoriesEntry\022\?\n\014til"
  "e_objects\030\024 \003(\0132).wanderer.protobuf.leve"
  "l.TileObjectsEntry\0228\n\010triggers\030\025 \003(\0132&.w"
  "anderer.protobuf.level.TriggersEntry\022@\n\014"
  "associations\030\026 \003(\0132*.wanderer.protobuf.l"
  "evel.AssociationsEntry\022\032\n\rplayer_entity\030"
  "2 \001(\rH\001\210\001\001\022\025\n\thumanoids\0303 \003(\rB\002\020\001\022$\n\027kee"
  "p_viewport_in_bounds\030d \001(\010H\002\210\001\001\022\035\n\020is_ou"
  "tside_level\030e \001(\010H\003\210\001\001\032K\n\rMovablesEntry\022"
  "\013\n\003key\030\001 \001(\r\022)\n\005value\030\002 \001(\0132\032.wanderer.p"
  "rotobuf.movable:\0028\001\032S\n\016DrawablesEntry\022\013\n"
  "\003key\030\001 \001(\r\0220\n\005value\030\002 \001(\0132!.wanderer.pro"
  "tobuf.depth_drawable:\0028\001\032N\n\017AnimationsEn"
  "try\022\013\n\003key\030\001 \001(\r\022*\n\005value\030\002 \001(\0132\033.wander"
  "er.protobuf.animated:\0028\001\032G\n\013PlantsEntry\022"
  "\013\n\003key\030\001 \001(\r\022\'\n\005value\030\002 \001(\0132\030.wanderer.p"
  "rotobuf.plant:\0028\001\032E\n\nTilesEntry\022\013\n\003key\030\001"
  " \001(\r\022&\n\005value\030\002 \001(\0132\027.wanderer.protobuf."
  "tile:\0028\001\032K\n\rTilemapsEntry\022\013\n\003key\030\001 \001(\r\022)"
  "\n\005value\030\002 \001(\0132\032.wanderer.protobuf.tilema"
  "p:\0028\001\032X\n\023TileAnimationsEntry\022\013\n\003key\030\001 \001("
  "\r\0220\n\005value\030\002 \001(\0132!.wanderer.protobuf.til"
  "e_animation:\0028\001\032G\n\013ChasesEntry\022\013\n\003key\030\001 "
  "\001(\r\022\'\n\005value\030\002 \001(\0132\030.wanderer.protobuf.c"
  "hase:\0028\001\032M\n\016ParticlesEntry\022\013\n\003key\030\001 \001(\r\022"
  "*\n\005value\030\002 \001(\0132\033.wanderer.protobuf.parti"
  "cle:\0028\001\032M\n\013LightsEntry\022\013\n\003key\030\001 \001(\r\022-\n\005v"
  "alue\030\002 \001(\0132\036.wanderer.protobuf.point_lig"
  "ht:\0028\001\032Q\n\020SpawnpointsEntry\022\013\n\003key\030\001 \001(\r\022"
  ",\n\005value\030\002 \001(\0132\035.wanderer.protobuf.spawn"
  "point:\0028\001\032J\n\rHitboxesEntry\022\013\n\003key\030\001 \001(\r\022"
  "(\n\005value\030\002 \001(\0132\031.wanderer.protobuf.hitbo"
  "x:\0028\001\032M\n\014ObjectsEntry\022\013\n\003key\030\001 \001(\r\022,\n\005va"
  "lue\030\002 \001(\0132\035.wanderer.protobuf.map_object"
  ":\0028\001\032I\n\014PortalsEntry\022\013\n\003key\030\001 \001(\r\022(\n\005val"
  "ue\030\002 \001(\0132\031.wanderer.protobuf.portal:\0028\001\032"
  "P\n\017TileLayersEntry\022\013\n\003key\030\001 \001(\r\022,\n\005value"
  "\030\002 \001(\0132\035.wanderer.protobuf.tile_layer:\0028"
  "\001\032K\n\rTilesetsEntry\022\013\n\003key\030\001 \001(\r\022)\n\005value"
  "\030\002 \001(\0132\032.wanderer.protobuf.tileset:\0028\001\032P"
  "\n\020InventoriesEntry\022\013\n\003key\030\001 \001(\r\022+\n\005value"
  "\030\002 \001(\0132\034.wanderer.protobuf.inventory:\0028\001"
  "\032R\n\020TileObjectsEntry\022\013\n\003key\030\001 \001(\r\022-\n\005val"
  "ue\030\002 \001(\0132\036.wanderer.protobuf.tile_object"
  ":\0028\001\032K\n\rTriggersEntry\022\013\n\003key\030\001 \001(\r\022)\n\005va"
  "lue\030\002 \001(\0132\032.wanderer.protobuf.trigger:\0028"
  "\001\032Y\n\021AssociationsEntry\022\013\n\003key\030\001 \001(\r\0223\n\005v"
  "alue\030\002 \001(\0132$.wanderer.protobuf.associate"
  "d_entity:\0028\001B\005\n\003_idB\020\n\016_player_entityB\032\n"
  "\030_keep_viewport_in_boundsB\023\n\021_is_outside"
  "_level\"I\n\013shared_data\0221\n\004time\030\001 \001(\0132\036.wa"
  "nderer.protobuf.time_of_dayH\000\210\001\001B\007\n\005_tim"
  "e\"\244\001\n\004save\022\035\n\020current_level_id\030\001 \001(\005H\000\210\001"
  "\001\0223\n\006shared\030\002 \001(\0132\036.wanderer.protobuf.sh"
  "ared_dataH\001\210\001\001\022(\n\006levels\030\003 \003(\0132\030.wandere"
  "r.protobuf.levelB\023\n\021_current_level_idB\t\n"
  "\007_sharedb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_save_2eproto_deps[21] = {
  &::descriptor_table_animated_2eproto,
  &::descriptor_table_associated_5fentity_2eproto,
  &::descriptor_table_chase_2eproto,
  &::descriptor_table_depth_5fdrawable_2eproto,
  &::descriptor_table_hitbox_2eproto,
  &::descriptor_table_inventory_2eproto,
  &::descriptor_table_movable_2eproto,
  &::descriptor_table_object_2eproto,
  &::descriptor_table_particle_2eproto,
  &::descriptor_table_plant_2eproto,
  &::descriptor_table_point_5flight_2eproto,
  &::descriptor_table_portal_2eproto,
  &::descriptor_table_spawnpoint_2eproto,
  &::descriptor_table_tile_2eproto,
  &::descriptor_table_tile_5fanimation_2eproto,
  &::descriptor_table_tile_5flayer_2eproto,
  &::descriptor_table_tile_5fobject_2eproto,
  &::descriptor_table_tilemap_2eproto,
  &::descriptor_table_tileset_2eproto,
  &::descriptor_table_time_5fof_5fday_2eproto,
  &::descriptor_table_trigger_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_save_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_save_2eproto = {
  false, false, 3656, descriptor_table_protodef_save_2eproto, "save.proto", 
  &descriptor_table_save_2eproto_once, descriptor_table_save_2eproto_deps, 21, 23,
  schemas, file_default_instances, TableStruct_save_2eproto::offsets,
  file_level_metadata_save_2eproto, file_level_enum_descriptors_save_2eproto, file_level_service_descriptors_save_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_save_2eproto_getter() {
  return &descriptor_table_save_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_save_2eproto(&descriptor_table_save_2eproto);
namespace wanderer {
namespace protobuf {

// ===================================================================

level_MovablesEntry_DoNotUse::level_MovablesEntry_DoNotUse() {}
level_MovablesEntry_DoNotUse::level_MovablesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_MovablesEntry_DoNotUse::MergeFrom(const level_MovablesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_MovablesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[0]);
}

// ===================================================================

level_DrawablesEntry_DoNotUse::level_DrawablesEntry_DoNotUse() {}
level_DrawablesEntry_DoNotUse::level_DrawablesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_DrawablesEntry_DoNotUse::MergeFrom(const level_DrawablesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_DrawablesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[1]);
}

// ===================================================================

level_AnimationsEntry_DoNotUse::level_AnimationsEntry_DoNotUse() {}
level_AnimationsEntry_DoNotUse::level_AnimationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_AnimationsEntry_DoNotUse::MergeFrom(const level_AnimationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_AnimationsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[2]);
}

// ===================================================================

level_PlantsEntry_DoNotUse::level_PlantsEntry_DoNotUse() {}
level_PlantsEntry_DoNotUse::level_PlantsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_PlantsEntry_DoNotUse::MergeFrom(const level_PlantsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_PlantsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[3]);
}

// ===================================================================

level_TilesEntry_DoNotUse::level_TilesEntry_DoNotUse() {}
level_TilesEntry_DoNotUse::level_TilesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_TilesEntry_DoNotUse::MergeFrom(const level_TilesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_TilesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[4]);
}

// ===================================================================

level_TilemapsEntry_DoNotUse::level_TilemapsEntry_DoNotUse() {}
level_TilemapsEntry_DoNotUse::level_TilemapsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_TilemapsEntry_DoNotUse::MergeFrom(const level_TilemapsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_TilemapsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[5]);
}

// ===================================================================

level_TileAnimationsEntry_DoNotUse::level_TileAnimationsEntry_DoNotUse() {}
level_TileAnimationsEntry_DoNotUse::level_TileAnimationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_TileAnimationsEntry_DoNotUse::MergeFrom(const level_TileAnimationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_TileAnimationsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[6]);
}

// ===================================================================

level_ChasesEntry_DoNotUse::level_ChasesEntry_DoNotUse() {}
level_ChasesEntry_DoNotUse::level_ChasesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_ChasesEntry_DoNotUse::MergeFrom(const level_ChasesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_ChasesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[7]);
}

// ===================================================================

level_ParticlesEntry_DoNotUse::level_ParticlesEntry_DoNotUse() {}
level_ParticlesEntry_DoNotUse::level_ParticlesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_ParticlesEntry_DoNotUse::MergeFrom(const level_ParticlesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_ParticlesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[8]);
}

// ===================================================================

level_LightsEntry_DoNotUse::level_LightsEntry_DoNotUse() {}
level_LightsEntry_DoNotUse::level_LightsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_LightsEntry_DoNotUse::MergeFrom(const level_LightsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_LightsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[9]);
}

// ===================================================================

level_SpawnpointsEntry_DoNotUse::level_SpawnpointsEntry_DoNotUse() {}
level_SpawnpointsEntry_DoNotUse::level_SpawnpointsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_SpawnpointsEntry_DoNotUse::MergeFrom(const level_SpawnpointsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_SpawnpointsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[10]);
}

// ===================================================================

level_HitboxesEntry_DoNotUse::level_HitboxesEntry_DoNotUse() {}
level_HitboxesEntry_DoNotUse::level_HitboxesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_HitboxesEntry_DoNotUse::MergeFrom(const level_HitboxesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_HitboxesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[11]);
}

// ===================================================================

level_ObjectsEntry_DoNotUse::level_ObjectsEntry_DoNotUse() {}
level_ObjectsEntry_DoNotUse::level_ObjectsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_ObjectsEntry_DoNotUse::MergeFrom(const level_ObjectsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_ObjectsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[12]);
}

// ===================================================================

level_PortalsEntry_DoNotUse::level_PortalsEntry_DoNotUse() {}
level_PortalsEntry_DoNotUse::level_PortalsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_PortalsEntry_DoNotUse::MergeFrom(const level_PortalsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_PortalsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[13]);
}

// ===================================================================

level_TileLayersEntry_DoNotUse::level_TileLayersEntry_DoNotUse() {}
level_TileLayersEntry_DoNotUse::level_TileLayersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_TileLayersEntry_DoNotUse::MergeFrom(const level_TileLayersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_TileLayersEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[14]);
}

// ===================================================================

level_TilesetsEntry_DoNotUse::level_TilesetsEntry_DoNotUse() {}
level_TilesetsEntry_DoNotUse::level_TilesetsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_TilesetsEntry_DoNotUse::MergeFrom(const level_TilesetsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_TilesetsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[15]);
}

// ===================================================================

level_InventoriesEntry_DoNotUse::level_InventoriesEntry_DoNotUse() {}
level_InventoriesEntry_DoNotUse::level_InventoriesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_InventoriesEntry_DoNotUse::MergeFrom(const level_InventoriesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_InventoriesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[16]);
}

// ===================================================================

level_TileObjectsEntry_DoNotUse::level_TileObjectsEntry_DoNotUse() {}
level_TileObjectsEntry_DoNotUse::level_TileObjectsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_TileObjectsEntry_DoNotUse::MergeFrom(const level_TileObjectsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_TileObjectsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[17]);
}

// ===================================================================

level_TriggersEntry_DoNotUse::level_TriggersEntry_DoNotUse() {}
level_TriggersEntry_DoNotUse::level_TriggersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_TriggersEntry_DoNotUse::MergeFrom(const level_TriggersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_TriggersEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[18]);
}

// ===================================================================

level_AssociationsEntry_DoNotUse::level_AssociationsEntry_DoNotUse() {}
level_AssociationsEntry_DoNotUse::level_AssociationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void level_AssociationsEntry_DoNotUse::MergeFrom(const level_AssociationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata level_AssociationsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[19]);
}

// ===================================================================

class level::_Internal {
 public:
  using HasBits = decltype(std::declval<level>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_player_entity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_keep_viewport_in_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_is_outside_level(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

void level::clear_movables() {
  movables_.Clear();
}
void level::clear_drawables() {
  drawables_.Clear();
}
void level::clear_animations() {
  animations_.Clear();
}
void level::clear_plants() {
  plants_.Clear();
}
void level::clear_tiles() {
  tiles_.Clear();
}
void level::clear_tilemaps() {
  tilemaps_.Clear();
}
void level::clear_tile_animations() {
  tile_animations_.Clear();
}
void level::clear_chases() {
  chases_.Clear();
}
void level::clear_particles() {
  particles_.Clear();
}
void level::clear_lights() {
  lights_.Clear();
}
void level::clear_spawnpoints() {
  spawnpoints_.Clear();
}
void level::clear_hitboxes() {
  hitboxes_.Clear();
}
void level::clear_objects() {
  objects_.Clear();
}
void level::clear_portals() {
  portals_.Clear();
}
void level::clear_tile_layers() {
  tile_layers_.Clear();
}
void level::clear_tilesets() {
  tilesets_.Clear();
}
void level::clear_inventories() {
  inventories_.Clear();
}
void level::clear_tile_objects() {
  tile_objects_.Clear();
}
void level::clear_triggers() {
  triggers_.Clear();
}
void level::clear_associations() {
  associations_.Clear();
}
level::level(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entities_(arena),
  movables_(arena),
  drawables_(arena),
  animations_(arena),
  plants_(arena),
  tiles_(arena),
  tilemaps_(arena),
  tile_animations_(arena),
  chases_(arena),
  particles_(arena),
  lights_(arena),
  spawnpoints_(arena),
  hitboxes_(arena),
  objects_(arena),
  portals_(arena),
  tile_layers_(arena),
  tilesets_(arena),
  inventories_(arena),
  tile_objects_(arena),
  triggers_(arena),
  associations_(arena),
  humanoids_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wanderer.protobuf.level)
}
level::level(const level& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      entities_(from.entities_),
      humanoids_(from.humanoids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  movables_.MergeFrom(from.movables_);
  drawables_.MergeFrom(from.drawables_);
  animations_.MergeFrom(from.animations_);
  plants_.MergeFrom(from.plants_);
  tiles_.MergeFrom(from.tiles_);
  tilemaps_.MergeFrom(from.tilemaps_);
  tile_animations_.MergeFrom(from.tile_animations_);
  chases_.MergeFrom(from.chases_);
  particles_.MergeFrom(from.particles_);
  lights_.MergeFrom(from.lights_);
  spawnpoints_.MergeFrom(from.spawnpoints_);
  hitboxes_.MergeFrom(from.hitboxes_);
  objects_.MergeFrom(from.objects_);
  portals_.MergeFrom(from.portals_);
  tile_layers_.MergeFrom(from.tile_layers_);
  tilesets_.MergeFrom(from.tilesets_);
  inventories_.MergeFrom(from.inventories_);
  tile_objects_.MergeFrom(from.tile_objects_);
  triggers_.MergeFrom(from.triggers_);
  associations_.MergeFrom(from.associations_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_outside_level_) -
    reinterpret_cast<char*>(&id_)) + sizeof(is_outside_level_));
  // @@protoc_insertion_point(copy_constructor:wanderer.protobuf.level)
}

void level::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_outside_level_) -
    reinterpret_cast<char*>(&id_)) + sizeof(is_outside_level_));
}

level::~level() {
  // @@protoc_insertion_point(destructor:wanderer.protobuf.level)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void level::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void level::ArenaDtor(void* object) {
  level* _this = reinterpret_cast< level* >(object);
  (void)_this;
  _this->movables_. ~MapField();
  _this->drawables_. ~MapField();
  _this->animations_. ~MapField();
  _this->plants_. ~MapField();
  _this->tiles_. ~MapField();
  _this->tilemaps_. ~MapField();
  _this->tile_animations_. ~MapField();
  _this->chases_. ~MapField();
  _this->particles_. ~MapField();
  _this->lights_. ~MapField();
  _this->spawnpoints_. ~MapField();
  _this->hitboxes_. ~MapField();
  _this->objects_. ~MapField();
  _this->portals_. ~MapField();
  _this->tile_layers_. ~MapField();
  _this->tilesets_. ~MapField();
  _this->inventories_. ~MapField();
  _this->tile_objects_. ~MapField();
  _this->triggers_. ~MapField();
  _this->associations_. ~MapField();
}
inline void level::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &level::ArenaDtor);
  }
}
void level::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void level::Clear() {
// @@protoc_insertion_point(message_clear_start:wanderer.protobuf.level)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entities_.Clear();
  movables_.Clear();
  drawables_.Clear();
  animations_.Clear();
  plants_.Clear();
  tiles_.Clear();
  tilemaps_.Clear();
  tile_animations_.Clear();
  chases_.Clear();
  particles_.Clear();
  lights_.Clear();
  spawnpoints_.Clear();
  hitboxes_.Clear();
  objects_.Clear();
  portals_.Clear();
  tile_layers_.Clear();
  tilesets_.Clear();
  inventories_.Clear();
  tile_objects_.Clear();
  triggers_.Clear();
  associations_.Clear();
  humanoids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_outside_level_) -
        reinterpret_cast<char*>(&id_)) + sizeof(is_outside_level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* level::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 entities = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_entities(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_entities(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.movable> movables = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&movables_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.depth_drawable> drawables = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&drawables_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.animated> animations = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&animations_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.plant> plants = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&plants_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.tile> tiles = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&tiles_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.tilemap> tilemaps = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&tilemaps_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.tile_animation> tile_animations = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&tile_animations_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.chase> chases = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&chases_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.particle> particles = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&particles_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.point_light> lights = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&lights_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.spawnpoint> spawnpoints = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&spawnpoints_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.hitbox> hitboxes = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&hitboxes_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.map_object> objects = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&objects_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.portal> portals = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&portals_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.tile_layer> tile_layers = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&tile_layers_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.tileset> tilesets = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&tilesets_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.inventory> inventories = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&inventories_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<154>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.tile_object> tile_objects = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&tile_objects_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.trigger> triggers = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&triggers_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.protobuf.associated_entity> associations = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&associations_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional uint32 player_entity = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_player_entity(&has_bits);
          player_entity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 humanoids = 51 [packed = true];
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_humanoids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152) {
          _internal_add_humanoids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool keep_viewport_in_bounds = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_keep_viewport_in_bounds(&has_bits);
          keep_viewport_in_bounds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool is_outside_level = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_is_outside_level(&has_bits);
          is_outside_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* level::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wanderer.protobuf.level)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 id = 1;
  if (_internal_has_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // repeated uint32 entities = 2 [packed = true];
  {
    int byte_size = _entities_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_entities(), byte_size, target);
    }
  }

  // map<uint32, .wanderer.protobuf.movable> movables = 3;
  if (!this->_internal_movables().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::movable >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_movables().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_movables().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::movable >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::movable >::const_iterator
          it = this->_internal_movables().begin();
          it != this->_internal_movables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_MovablesEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::movable >::const_iterator
          it = this->_internal_movables().begin();
          it != this->_internal_movables().end(); ++it) {
        target = level_MovablesEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.depth_drawable> drawables = 4;
  if (!this->_internal_drawables().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::depth_drawable >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_drawables().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_drawables().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::depth_drawable >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::depth_drawable >::const_iterator
          it = this->_internal_drawables().begin();
          it != this->_internal_drawables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_DrawablesEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::depth_drawable >::const_iterator
          it = this->_internal_drawables().begin();
          it != this->_internal_drawables().end(); ++it) {
        target = level_DrawablesEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.animated> animations = 5;
  if (!this->_internal_animations().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::animated >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_animations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_animations().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::animated >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::animated >::const_iterator
          it = this->_internal_animations().begin();
          it != this->_internal_animations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_AnimationsEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::animated >::const_iterator
          it = this->_internal_animations().begin();
          it != this->_internal_animations().end(); ++it) {
        target = level_AnimationsEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.plant> plants = 6;
  if (!this->_internal_plants().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::plant >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_plants().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_plants().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::plant >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::plant >::const_iterator
          it = this->_internal_plants().begin();
          it != this->_internal_plants().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_PlantsEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::plant >::const_iterator
          it = this->_internal_plants().begin();
          it != this->_internal_plants().end(); ++it) {
        target = level_PlantsEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.tile> tiles = 7;
  if (!this->_internal_tiles().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tiles().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tiles().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile >::const_iterator
          it = this->_internal_tiles().begin();
          it != this->_internal_tiles().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_TilesEntry_DoNotUse::Funcs::InternalSerialize(7, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile >::const_iterator
          it = this->_internal_tiles().begin();
          it != this->_internal_tiles().end(); ++it) {
        target = level_TilesEntry_DoNotUse::Funcs::InternalSerialize(7, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.tilemap> tilemaps = 8;
  if (!this->_internal_tilemaps().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tilemap >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tilemaps().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tilemaps().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tilemap >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tilemap >::const_iterator
          it = this->_internal_tilemaps().begin();
          it != this->_internal_tilemaps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_TilemapsEntry_DoNotUse::Funcs::InternalSerialize(8, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tilemap >::const_iterator
          it = this->_internal_tilemaps().begin();
          it != this->_internal_tilemaps().end(); ++it) {
        target = level_TilemapsEntry_DoNotUse::Funcs::InternalSerialize(8, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.tile_animation> tile_animations = 9;
  if (!this->_internal_tile_animations().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_animation >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tile_animations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tile_animations().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_animation >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_animation >::const_iterator
          it = this->_internal_tile_animations().begin();
          it != this->_internal_tile_animations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_TileAnimationsEntry_DoNotUse::Funcs::InternalSerialize(9, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_animation >::const_iterator
          it = this->_internal_tile_animations().begin();
          it != this->_internal_tile_animations().end(); ++it) {
        target = level_TileAnimationsEntry_DoNotUse::Funcs::InternalSerialize(9, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.chase> chases = 10;
  if (!this->_internal_chases().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::chase >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_chases().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_chases().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::chase >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::chase >::const_iterator
          it = this->_internal_chases().begin();
          it != this->_internal_chases().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_ChasesEntry_DoNotUse::Funcs::InternalSerialize(10, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::chase >::const_iterator
          it = this->_internal_chases().begin();
          it != this->_internal_chases().end(); ++it) {
        target = level_ChasesEntry_DoNotUse::Funcs::InternalSerialize(10, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.particle> particles = 11;
  if (!this->_internal_particles().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::particle >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_particles().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_particles().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::particle >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::particle >::const_iterator
          it = this->_internal_particles().begin();
          it != this->_internal_particles().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_ParticlesEntry_DoNotUse::Funcs::InternalSerialize(11, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::particle >::const_iterator
          it = this->_internal_particles().begin();
          it != this->_internal_particles().end(); ++it) {
        target = level_ParticlesEntry_DoNotUse::Funcs::InternalSerialize(11, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.point_light> lights = 12;
  if (!this->_internal_lights().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::point_light >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_lights().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_lights().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::point_light >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::point_light >::const_iterator
          it = this->_internal_lights().begin();
          it != this->_internal_lights().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_LightsEntry_DoNotUse::Funcs::InternalSerialize(12, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::point_light >::const_iterator
          it = this->_internal_lights().begin();
          it != this->_internal_lights().end(); ++it) {
        target = level_LightsEntry_DoNotUse::Funcs::InternalSerialize(12, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.spawnpoint> spawnpoints = 13;
  if (!this->_internal_spawnpoints().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::spawnpoint >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_spawnpoints().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_spawnpoints().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::spawnpoint >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::spawnpoint >::const_iterator
          it = this->_internal_spawnpoints().begin();
          it != this->_internal_spawnpoints().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_SpawnpointsEntry_DoNotUse::Funcs::InternalSerialize(13, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::spawnpoint >::const_iterator
          it = this->_internal_spawnpoints().begin();
          it != this->_internal_spawnpoints().end(); ++it) {
        target = level_SpawnpointsEntry_DoNotUse::Funcs::InternalSerialize(13, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.hitbox> hitboxes = 14;
  if (!this->_internal_hitboxes().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::hitbox >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_hitboxes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_hitboxes().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::hitbox >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::hitbox >::const_iterator
          it = this->_internal_hitboxes().begin();
          it != this->_internal_hitboxes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_HitboxesEntry_DoNotUse::Funcs::InternalSerialize(14, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::hitbox >::const_iterator
          it = this->_internal_hitboxes().begin();
          it != this->_internal_hitboxes().end(); ++it) {
        target = level_HitboxesEntry_DoNotUse::Funcs::InternalSerialize(14, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.map_object> objects = 15;
  if (!this->_internal_objects().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::map_object >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_objects().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_objects().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::map_object >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::map_object >::const_iterator
          it = this->_internal_objects().begin();
          it != this->_internal_objects().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_ObjectsEntry_DoNotUse::Funcs::InternalSerialize(15, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::map_object >::const_iterator
          it = this->_internal_objects().begin();
          it != this->_internal_objects().end(); ++it) {
        target = level_ObjectsEntry_DoNotUse::Funcs::InternalSerialize(15, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.portal> portals = 16;
  if (!this->_internal_portals().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::portal >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_portals().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_portals().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::portal >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::portal >::const_iterator
          it = this->_internal_portals().begin();
          it != this->_internal_portals().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_PortalsEntry_DoNotUse::Funcs::InternalSerialize(16, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::portal >::const_iterator
          it = this->_internal_portals().begin();
          it != this->_internal_portals().end(); ++it) {
        target = level_PortalsEntry_DoNotUse::Funcs::InternalSerialize(16, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.tile_layer> tile_layers = 17;
  if (!this->_internal_tile_layers().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_layer >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tile_layers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tile_layers().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_layer >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_layer >::const_iterator
          it = this->_internal_tile_layers().begin();
          it != this->_internal_tile_layers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_TileLayersEntry_DoNotUse::Funcs::InternalSerialize(17, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_layer >::const_iterator
          it = this->_internal_tile_layers().begin();
          it != this->_internal_tile_layers().end(); ++it) {
        target = level_TileLayersEntry_DoNotUse::Funcs::InternalSerialize(17, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.tileset> tilesets = 18;
  if (!this->_internal_tilesets().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tileset >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tilesets().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tilesets().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tileset >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tileset >::const_iterator
          it = this->_internal_tilesets().begin();
          it != this->_internal_tilesets().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_TilesetsEntry_DoNotUse::Funcs::InternalSerialize(18, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tileset >::const_iterator
          it = this->_internal_tilesets().begin();
          it != this->_internal_tilesets().end(); ++it) {
        target = level_TilesetsEntry_DoNotUse::Funcs::InternalSerialize(18, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.inventory> inventories = 19;
  if (!this->_internal_inventories().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::inventory >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_inventories().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_inventories().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::inventory >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::inventory >::const_iterator
          it = this->_internal_inventories().begin();
          it != this->_internal_inventories().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_InventoriesEntry_DoNotUse::Funcs::InternalSerialize(19, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::inventory >::const_iterator
          it = this->_internal_inventories().begin();
          it != this->_internal_inventories().end(); ++it) {
        target = level_InventoriesEntry_DoNotUse::Funcs::InternalSerialize(19, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.tile_object> tile_objects = 20;
  if (!this->_internal_tile_objects().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_object >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tile_objects().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tile_objects().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_object >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_object >::const_iterator
          it = this->_internal_tile_objects().begin();
          it != this->_internal_tile_objects().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_TileObjectsEntry_DoNotUse::Funcs::InternalSerialize(20, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_object >::const_iterator
          it = this->_internal_tile_objects().begin();
          it != this->_internal_tile_objects().end(); ++it) {
        target = level_TileObjectsEntry_DoNotUse::Funcs::InternalSerialize(20, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.trigger> triggers = 21;
  if (!this->_internal_triggers().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::trigger >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_triggers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_triggers().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::trigger >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::trigger >::const_iterator
          it = this->_internal_triggers().begin();
          it != this->_internal_triggers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_TriggersEntry_DoNotUse::Funcs::InternalSerialize(21, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::trigger >::const_iterator
          it = this->_internal_triggers().begin();
          it != this->_internal_triggers().end(); ++it) {
        target = level_TriggersEntry_DoNotUse::Funcs::InternalSerialize(21, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.protobuf.associated_entity> associations = 22;
  if (!this->_internal_associations().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::associated_entity >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_associations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_associations().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::associated_entity >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::associated_entity >::const_iterator
          it = this->_internal_associations().begin();
          it != this->_internal_associations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = level_AssociationsEntry_DoNotUse::Funcs::InternalSerialize(22, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::associated_entity >::const_iterator
          it = this->_internal_associations().begin();
          it != this->_internal_associations().end(); ++it) {
        target = level_AssociationsEntry_DoNotUse::Funcs::InternalSerialize(22, it->first, it->second, target, stream);
      }
    }
  }

  // optional uint32 player_entity = 50;
  if (_internal_has_player_entity()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(50, this->_internal_player_entity(), target);
  }

  // repeated uint32 humanoids = 51 [packed = true];
  {
    int byte_size = _humanoids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          51, _internal_humanoids(), byte_size, target);
    }
  }

  // optional bool keep_viewport_in_bounds = 100;
  if (_internal_has_keep_viewport_in_bounds()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(100, this->_internal_keep_viewport_in_bounds(), target);
  }

  // optional bool is_outside_level = 101;
  if (_internal_has_is_outside_level()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(101, this->_internal_is_outside_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wanderer.protobuf.level)
  return target;
}

size_t level::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wanderer.protobuf.level)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 entities = 2 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->entities_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _entities_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<uint32, .wanderer.protobuf.movable> movables = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_movables_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::movable >::const_iterator
      it = this->_internal_movables().begin();
      it != this->_internal_movables().end(); ++it) {
    total_size += level_MovablesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.depth_drawable> drawables = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_drawables_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::depth_drawable >::const_iterator
      it = this->_internal_drawables().begin();
      it != this->_internal_drawables().end(); ++it) {
    total_size += level_DrawablesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.animated> animations = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_animations_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::animated >::const_iterator
      it = this->_internal_animations().begin();
      it != this->_internal_animations().end(); ++it) {
    total_size += level_AnimationsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.plant> plants = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_plants_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::plant >::const_iterator
      it = this->_internal_plants().begin();
      it != this->_internal_plants().end(); ++it) {
    total_size += level_PlantsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.tile> tiles = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tiles_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile >::const_iterator
      it = this->_internal_tiles().begin();
      it != this->_internal_tiles().end(); ++it) {
    total_size += level_TilesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.tilemap> tilemaps = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tilemaps_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tilemap >::const_iterator
      it = this->_internal_tilemaps().begin();
      it != this->_internal_tilemaps().end(); ++it) {
    total_size += level_TilemapsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.tile_animation> tile_animations = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tile_animations_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_animation >::const_iterator
      it = this->_internal_tile_animations().begin();
      it != this->_internal_tile_animations().end(); ++it) {
    total_size += level_TileAnimationsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.chase> chases = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_chases_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::chase >::const_iterator
      it = this->_internal_chases().begin();
      it != this->_internal_chases().end(); ++it) {
    total_size += level_ChasesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.particle> particles = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_particles_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::particle >::const_iterator
      it = this->_internal_particles().begin();
      it != this->_internal_particles().end(); ++it) {
    total_size += level_ParticlesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.point_light> lights = 12;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_lights_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::point_light >::const_iterator
      it = this->_internal_lights().begin();
      it != this->_internal_lights().end(); ++it) {
    total_size += level_LightsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.spawnpoint> spawnpoints = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_spawnpoints_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::spawnpoint >::const_iterator
      it = this->_internal_spawnpoints().begin();
      it != this->_internal_spawnpoints().end(); ++it) {
    total_size += level_SpawnpointsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.hitbox> hitboxes = 14;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_hitboxes_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::hitbox >::const_iterator
      it = this->_internal_hitboxes().begin();
      it != this->_internal_hitboxes().end(); ++it) {
    total_size += level_HitboxesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.map_object> objects = 15;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_objects_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::map_object >::const_iterator
      it = this->_internal_objects().begin();
      it != this->_internal_objects().end(); ++it) {
    total_size += level_ObjectsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.portal> portals = 16;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_portals_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::portal >::const_iterator
      it = this->_internal_portals().begin();
      it != this->_internal_portals().end(); ++it) {
    total_size += level_PortalsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.tile_layer> tile_layers = 17;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tile_layers_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_layer >::const_iterator
      it = this->_internal_tile_layers().begin();
      it != this->_internal_tile_layers().end(); ++it) {
    total_size += level_TileLayersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.tileset> tilesets = 18;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tilesets_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tileset >::const_iterator
      it = this->_internal_tilesets().begin();
      it != this->_internal_tilesets().end(); ++it) {
    total_size += level_TilesetsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.inventory> inventories = 19;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_inventories_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::inventory >::const_iterator
      it = this->_internal_inventories().begin();
      it != this->_internal_inventories().end(); ++it) {
    total_size += level_InventoriesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.tile_object> tile_objects = 20;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tile_objects_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::tile_object >::const_iterator
      it = this->_internal_tile_objects().begin();
      it != this->_internal_tile_objects().end(); ++it) {
    total_size += level_TileObjectsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.trigger> triggers = 21;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_triggers_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::trigger >::const_iterator
      it = this->_internal_triggers().begin();
      it != this->_internal_triggers().end(); ++it) {
    total_size += level_TriggersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.protobuf.associated_entity> associations = 22;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_associations_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::protobuf::associated_entity >::const_iterator
      it = this->_internal_associations().begin();
      it != this->_internal_associations().end(); ++it) {
    total_size += level_AssociationsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated uint32 humanoids = 51 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->humanoids_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _humanoids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_id());
    }

    // optional uint32 player_entity = 50;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_player_entity());
    }

    // optional bool keep_viewport_in_bounds = 100;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool is_outside_level = 101;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData level::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    level::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*level::GetClassData() const { return &_class_data_; }

void level::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<level *>(to)->MergeFrom(
      static_cast<const level &>(from));
}


void level::MergeFrom(const level& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wanderer.protobuf.level)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entities_.MergeFrom(from.entities_);
  movables_.MergeFrom(from.movables_);
  drawables_.MergeFrom(from.drawables_);
  animations_.MergeFrom(from.animations_);
  plants_.MergeFrom(from.plants_);
  tiles_.MergeFrom(from.tiles_);
  tilemaps_.MergeFrom(from.tilemaps_);
  tile_animations_.MergeFrom(from.tile_animations_);
  chases_.MergeFrom(from.chases_);
  particles_.MergeFrom(from.particles_);
  lights_.MergeFrom(from.lights_);
  spawnpoints_.MergeFrom(from.spawnpoints_);
  hitboxes_.MergeFrom(from.hitboxes_);
  objects_.MergeFrom(from.objects_);
  portals_.MergeFrom(from.portals_);
  tile_layers_.MergeFrom(from.tile_layers_);
  tilesets_.MergeFrom(from.tilesets_);
  inventories_.MergeFrom(from.inventories_);
  tile_objects_.MergeFrom(from.tile_objects_);
  triggers_.MergeFrom(from.triggers_);
  associations_.MergeFrom(from.associations_);
  humanoids_.MergeFrom(from.humanoids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      player_entity_ = from.player_entity_;
    }
    if (cached_has_bits & 0x00000004u) {
      keep_viewport_in_bounds_ = from.keep_viewport_in_bounds_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_outside_level_ = from.is_outside_level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void level::CopyFrom(const level& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wanderer.protobuf.level)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool level::IsInitialized() const {
  return true;
}

void level::InternalSwap(level* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  entities_.InternalSwap(&other->entities_);
  movables_.InternalSwap(&other->movables_);
  drawables_.InternalSwap(&other->drawables_);
  animations_.InternalSwap(&other->animations_);
  plants_.InternalSwap(&other->plants_);
  tiles_.InternalSwap(&other->tiles_);
  tilemaps_.InternalSwap(&other->tilemaps_);
  tile_animations_.InternalSwap(&other->tile_animations_);
  chases_.InternalSwap(&other->chases_);
  particles_.InternalSwap(&other->particles_);
  lights_.InternalSwap(&other->lights_);
  spawnpoints_.InternalSwap(&other->spawnpoints_);
  hitboxes_.InternalSwap(&other->hitboxes_);
  objects_.InternalSwap(&other->objects_);
  portals_.InternalSwap(&other->portals_);
  tile_layers_.InternalSwap(&other->tile_layers_);
  tilesets_.InternalSwap(&other->tilesets_);
  inventories_.InternalSwap(&other->inventories_);
  tile_objects_.InternalSwap(&other->tile_objects_);
  triggers_.InternalSwap(&other->triggers_);
  associations_.InternalSwap(&other->associations_);
  humanoids_.InternalSwap(&other->humanoids_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(level, is_outside_level_)
      + sizeof(level::is_outside_level_)
      - PROTOBUF_FIELD_OFFSET(level, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata level::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[20]);
}

// ===================================================================

class shared_data::_Internal {
 public:
  using HasBits = decltype(std::declval<shared_data>()._has_bits_);
  static const ::wanderer::protobuf::time_of_day& time(const shared_data* msg);
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::wanderer::protobuf::time_of_day&
shared_data::_Internal::time(const shared_data* msg) {
  return *msg->time_;
}
void shared_data::clear_time() {
  if (time_ != nullptr) time_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
shared_data::shared_data(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wanderer.protobuf.shared_data)
}
shared_data::shared_data(const shared_data& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_time()) {
    time_ = new ::wanderer::protobuf::time_of_day(*from.time_);
  } else {
    time_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:wanderer.protobuf.shared_data)
}

void shared_data::SharedCtor() {
time_ = nullptr;
}

shared_data::~shared_data() {
  // @@protoc_insertion_point(destructor:wanderer.protobuf.shared_data)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void shared_data::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete time_;
}

void shared_data::ArenaDtor(void* object) {
  shared_data* _this = reinterpret_cast< shared_data* >(object);
  (void)_this;
}
void shared_data::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void shared_data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void shared_data::Clear() {
// @@protoc_insertion_point(message_clear_start:wanderer.protobuf.shared_data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(time_ != nullptr);
    time_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* shared_data::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .wanderer.protobuf.time_of_day time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* shared_data::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wanderer.protobuf.shared_data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .wanderer.protobuf.time_of_day time = 1;
  if (_internal_has_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::time(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wanderer.protobuf.shared_data)
  return target;
}

size_t shared_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wanderer.protobuf.shared_data)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .wanderer.protobuf.time_of_day time = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData shared_data::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    shared_data::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*shared_data::GetClassData() const { return &_class_data_; }

void shared_data::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<shared_data *>(to)->MergeFrom(
      static_cast<const shared_data &>(from));
}


void shared_data::MergeFrom(const shared_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wanderer.protobuf.shared_data)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_time()) {
    _internal_mutable_time()->::wanderer::protobuf::time_of_day::MergeFrom(from._internal_time());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void shared_data::CopyFrom(const shared_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wanderer.protobuf.shared_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool shared_data::IsInitialized() const {
  return true;
}

void shared_data::InternalSwap(shared_data* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(time_, other->time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata shared_data::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[21]);
}

// ===================================================================

class save::_Internal {
 public:
  using HasBits = decltype(std::declval<save>()._has_bits_);
  static void set_has_current_level_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::wanderer::protobuf::shared_data& shared(const save* msg);
  static void set_has_shared(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::wanderer::protobuf::shared_data&
save::_Internal::shared(const save* msg) {
  return *msg->shared_;
}
save::save(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  levels_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wanderer.protobuf.save)
}
save::save(const save& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      levels_(from.levels_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_shared()) {
    shared_ = new ::wanderer::protobuf::shared_data(*from.shared_);
  } else {
    shared_ = nullptr;
  }
  current_level_id_ = from.current_level_id_;
  // @@protoc_insertion_point(copy_constructor:wanderer.protobuf.save)
}

void save::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&shared_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&current_level_id_) -
    reinterpret_cast<char*>(&shared_)) + sizeof(current_level_id_));
}

save::~save() {
  // @@protoc_insertion_point(destructor:wanderer.protobuf.save)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void save::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete shared_;
}

void save::ArenaDtor(void* object) {
  save* _this = reinterpret_cast< save* >(object);
  (void)_this;
}
void save::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void save::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void save::Clear() {
// @@protoc_insertion_point(message_clear_start:wanderer.protobuf.save)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  levels_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(shared_ != nullptr);
    shared_->Clear();
  }
  current_level_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* save::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 current_level_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_current_level_id(&has_bits);
          current_level_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .wanderer.protobuf.shared_data shared = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_shared(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .wanderer.protobuf.level levels = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_levels(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* save::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wanderer.protobuf.save)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 current_level_id = 1;
  if (_internal_has_current_level_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_current_level_id(), target);
  }

  // optional .wanderer.protobuf.shared_data shared = 2;
  if (_internal_has_shared()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::shared(this), target, stream);
  }

  // repeated .wanderer.protobuf.level levels = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_levels_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_levels(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wanderer.protobuf.save)
  return target;
}

size_t save::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wanderer.protobuf.save)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .wanderer.protobuf.level levels = 3;
  total_size += 1UL * this->_internal_levels_size();
  for (const auto& msg : this->levels_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .wanderer.protobuf.shared_data shared = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *shared_);
    }

    // optional int32 current_level_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_current_level_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData save::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    save::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*save::GetClassData() const { return &_class_data_; }

void save::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<save *>(to)->MergeFrom(
      static_cast<const save &>(from));
}


void save::MergeFrom(const save& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wanderer.protobuf.save)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  levels_.MergeFrom(from.levels_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_shared()->::wanderer::protobuf::shared_data::MergeFrom(from._internal_shared());
    }
    if (cached_has_bits & 0x00000002u) {
      current_level_id_ = from.current_level_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void save::CopyFrom(const save& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wanderer.protobuf.save)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool save::IsInitialized() const {
  return true;
}

void save::InternalSwap(save* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  levels_.InternalSwap(&other->levels_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(save, current_level_id_)
      + sizeof(save::current_level_id_)
      - PROTOBUF_FIELD_OFFSET(save, shared_)>(
          reinterpret_cast<char*>(&shared_),
          reinterpret_cast<char*>(&other->shared_));
}

::PROTOBUF_NAMESPACE_ID::Metadata save::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_save_2eproto_getter, &descriptor_table_save_2eproto_once,
      file_level_metadata_save_2eproto[22]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace wanderer
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_MovablesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_MovablesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_MovablesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_DrawablesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_DrawablesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_DrawablesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_AnimationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_AnimationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_AnimationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_PlantsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_PlantsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_PlantsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_TilesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_TilesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_TilesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_TilemapsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_TilemapsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_TilemapsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_TileAnimationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_TileAnimationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_TileAnimationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_ChasesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_ChasesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_ChasesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_ParticlesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_ParticlesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_ParticlesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_LightsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_LightsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_LightsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_SpawnpointsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_SpawnpointsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_SpawnpointsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_HitboxesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_HitboxesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_HitboxesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_ObjectsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_ObjectsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_ObjectsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_PortalsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_PortalsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_PortalsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_TileLayersEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_TileLayersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_TileLayersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_TilesetsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_TilesetsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_TilesetsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_InventoriesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_InventoriesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_InventoriesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_TileObjectsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_TileObjectsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_TileObjectsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_TriggersEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_TriggersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_TriggersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level_AssociationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::protobuf::level_AssociationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level_AssociationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::level* Arena::CreateMaybeMessage< ::wanderer::protobuf::level >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::level >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::shared_data* Arena::CreateMaybeMessage< ::wanderer::protobuf::shared_data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::shared_data >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::protobuf::save* Arena::CreateMaybeMessage< ::wanderer::protobuf::save >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::protobuf::save >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
