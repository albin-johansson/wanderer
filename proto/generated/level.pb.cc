// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: level.proto

#include "level.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace wanderer {
namespace proto {
constexpr Level_TilesetsEntry_DoNotUse::Level_TilesetsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_TilesetsEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_TilesetsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_TilesetsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_TilesetsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_TilesetsEntry_DoNotUseDefaultTypeInternal _Level_TilesetsEntry_DoNotUse_default_instance_;
constexpr Level_MovablesEntry_DoNotUse::Level_MovablesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_MovablesEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_MovablesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_MovablesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_MovablesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_MovablesEntry_DoNotUseDefaultTypeInternal _Level_MovablesEntry_DoNotUse_default_instance_;
constexpr Level_DrawablesEntry_DoNotUse::Level_DrawablesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_DrawablesEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_DrawablesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_DrawablesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_DrawablesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_DrawablesEntry_DoNotUseDefaultTypeInternal _Level_DrawablesEntry_DoNotUse_default_instance_;
constexpr Level_AnimationsEntry_DoNotUse::Level_AnimationsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_AnimationsEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_AnimationsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_AnimationsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_AnimationsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_AnimationsEntry_DoNotUseDefaultTypeInternal _Level_AnimationsEntry_DoNotUse_default_instance_;
constexpr Level_PlantsEntry_DoNotUse::Level_PlantsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_PlantsEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_PlantsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_PlantsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_PlantsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_PlantsEntry_DoNotUseDefaultTypeInternal _Level_PlantsEntry_DoNotUse_default_instance_;
constexpr Level_TilesEntry_DoNotUse::Level_TilesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_TilesEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_TilesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_TilesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_TilesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_TilesEntry_DoNotUseDefaultTypeInternal _Level_TilesEntry_DoNotUse_default_instance_;
constexpr Level_TileAnimationsEntry_DoNotUse::Level_TileAnimationsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_TileAnimationsEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_TileAnimationsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_TileAnimationsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_TileAnimationsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_TileAnimationsEntry_DoNotUseDefaultTypeInternal _Level_TileAnimationsEntry_DoNotUse_default_instance_;
constexpr Level_ChasesEntry_DoNotUse::Level_ChasesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_ChasesEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_ChasesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_ChasesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_ChasesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_ChasesEntry_DoNotUseDefaultTypeInternal _Level_ChasesEntry_DoNotUse_default_instance_;
constexpr Level_ParticlesEntry_DoNotUse::Level_ParticlesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_ParticlesEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_ParticlesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_ParticlesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_ParticlesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_ParticlesEntry_DoNotUseDefaultTypeInternal _Level_ParticlesEntry_DoNotUse_default_instance_;
constexpr Level_LightsEntry_DoNotUse::Level_LightsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_LightsEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_LightsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_LightsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_LightsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_LightsEntry_DoNotUseDefaultTypeInternal _Level_LightsEntry_DoNotUse_default_instance_;
constexpr Level_SpawnpointsEntry_DoNotUse::Level_SpawnpointsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_SpawnpointsEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_SpawnpointsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_SpawnpointsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_SpawnpointsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_SpawnpointsEntry_DoNotUseDefaultTypeInternal _Level_SpawnpointsEntry_DoNotUse_default_instance_;
constexpr Level_HitboxesEntry_DoNotUse::Level_HitboxesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_HitboxesEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_HitboxesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_HitboxesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_HitboxesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_HitboxesEntry_DoNotUseDefaultTypeInternal _Level_HitboxesEntry_DoNotUse_default_instance_;
constexpr Level_ObjectsEntry_DoNotUse::Level_ObjectsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_ObjectsEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_ObjectsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_ObjectsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_ObjectsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_ObjectsEntry_DoNotUseDefaultTypeInternal _Level_ObjectsEntry_DoNotUse_default_instance_;
constexpr Level_PortalsEntry_DoNotUse::Level_PortalsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_PortalsEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_PortalsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_PortalsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_PortalsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_PortalsEntry_DoNotUseDefaultTypeInternal _Level_PortalsEntry_DoNotUse_default_instance_;
constexpr Level_TileLayersEntry_DoNotUse::Level_TileLayersEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_TileLayersEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_TileLayersEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_TileLayersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_TileLayersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_TileLayersEntry_DoNotUseDefaultTypeInternal _Level_TileLayersEntry_DoNotUse_default_instance_;
constexpr Level_InventoriesEntry_DoNotUse::Level_InventoriesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_InventoriesEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_InventoriesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_InventoriesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_InventoriesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_InventoriesEntry_DoNotUseDefaultTypeInternal _Level_InventoriesEntry_DoNotUse_default_instance_;
constexpr Level_TileObjectsEntry_DoNotUse::Level_TileObjectsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_TileObjectsEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_TileObjectsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_TileObjectsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_TileObjectsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_TileObjectsEntry_DoNotUseDefaultTypeInternal _Level_TileObjectsEntry_DoNotUse_default_instance_;
constexpr Level_TriggersEntry_DoNotUse::Level_TriggersEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_TriggersEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_TriggersEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_TriggersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_TriggersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_TriggersEntry_DoNotUseDefaultTypeInternal _Level_TriggersEntry_DoNotUse_default_instance_;
constexpr Level_AssociationsEntry_DoNotUse::Level_AssociationsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Level_AssociationsEntry_DoNotUseDefaultTypeInternal {
  constexpr Level_AssociationsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Level_AssociationsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Level_AssociationsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Level_AssociationsEntry_DoNotUseDefaultTypeInternal _Level_AssociationsEntry_DoNotUse_default_instance_;
constexpr Level::Level(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entities_()
  , _entities_cached_byte_size_(0)
  , humanoids_()
  , _humanoids_cached_byte_size_(0)
  , movables_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , drawables_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , animations_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , plants_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , tiles_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , tile_animations_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , chases_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , particles_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , lights_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , spawnpoints_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , hitboxes_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , objects_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , portals_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , tile_layers_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , inventories_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , tile_objects_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , triggers_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , associations_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , tilesets_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , id_(0)
  , humanoid_layer_index_(0)
  , row_count_(uint64_t{0u})
  , column_count_(uint64_t{0u})
  , keep_viewport_in_bounds_(false)
  , is_outside_level_(false)
  , player_entity_(0u){}
struct LevelDefaultTypeInternal {
  constexpr LevelDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LevelDefaultTypeInternal() {}
  union {
    Level _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LevelDefaultTypeInternal _Level_default_instance_;
}  // namespace proto
}  // namespace wanderer
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_level_2eproto[20];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_level_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_level_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_level_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TilesetsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TilesetsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TilesetsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TilesetsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_MovablesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_MovablesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_MovablesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_MovablesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_DrawablesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_DrawablesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_DrawablesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_DrawablesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_AnimationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_AnimationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_AnimationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_AnimationsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_PlantsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_PlantsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_PlantsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_PlantsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TilesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TilesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TilesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TilesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileAnimationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileAnimationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileAnimationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileAnimationsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ChasesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ChasesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ChasesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ChasesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ParticlesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ParticlesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ParticlesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ParticlesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_LightsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_LightsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_LightsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_LightsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_SpawnpointsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_SpawnpointsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_SpawnpointsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_SpawnpointsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_HitboxesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_HitboxesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_HitboxesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_HitboxesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ObjectsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ObjectsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ObjectsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_ObjectsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_PortalsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_PortalsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_PortalsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_PortalsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileLayersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileLayersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileLayersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileLayersEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_InventoriesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_InventoriesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_InventoriesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_InventoriesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileObjectsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileObjectsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileObjectsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TileObjectsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TriggersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TriggersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TriggersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_TriggersEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_AssociationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_AssociationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_AssociationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level_AssociationsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, id_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, humanoid_layer_index_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, row_count_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, column_count_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, keep_viewport_in_bounds_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, is_outside_level_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, player_entity_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, entities_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, humanoids_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, tilesets_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, movables_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, drawables_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, animations_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, plants_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, tiles_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, tile_animations_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, chases_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, particles_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, lights_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, spawnpoints_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, hitboxes_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, objects_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, portals_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, tile_layers_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, inventories_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, tile_objects_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, triggers_),
  PROTOBUF_FIELD_OFFSET(::wanderer::proto::Level, associations_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::wanderer::proto::Level_TilesetsEntry_DoNotUse)},
  { 10, 18, -1, sizeof(::wanderer::proto::Level_MovablesEntry_DoNotUse)},
  { 20, 28, -1, sizeof(::wanderer::proto::Level_DrawablesEntry_DoNotUse)},
  { 30, 38, -1, sizeof(::wanderer::proto::Level_AnimationsEntry_DoNotUse)},
  { 40, 48, -1, sizeof(::wanderer::proto::Level_PlantsEntry_DoNotUse)},
  { 50, 58, -1, sizeof(::wanderer::proto::Level_TilesEntry_DoNotUse)},
  { 60, 68, -1, sizeof(::wanderer::proto::Level_TileAnimationsEntry_DoNotUse)},
  { 70, 78, -1, sizeof(::wanderer::proto::Level_ChasesEntry_DoNotUse)},
  { 80, 88, -1, sizeof(::wanderer::proto::Level_ParticlesEntry_DoNotUse)},
  { 90, 98, -1, sizeof(::wanderer::proto::Level_LightsEntry_DoNotUse)},
  { 100, 108, -1, sizeof(::wanderer::proto::Level_SpawnpointsEntry_DoNotUse)},
  { 110, 118, -1, sizeof(::wanderer::proto::Level_HitboxesEntry_DoNotUse)},
  { 120, 128, -1, sizeof(::wanderer::proto::Level_ObjectsEntry_DoNotUse)},
  { 130, 138, -1, sizeof(::wanderer::proto::Level_PortalsEntry_DoNotUse)},
  { 140, 148, -1, sizeof(::wanderer::proto::Level_TileLayersEntry_DoNotUse)},
  { 150, 158, -1, sizeof(::wanderer::proto::Level_InventoriesEntry_DoNotUse)},
  { 160, 168, -1, sizeof(::wanderer::proto::Level_TileObjectsEntry_DoNotUse)},
  { 170, 178, -1, sizeof(::wanderer::proto::Level_TriggersEntry_DoNotUse)},
  { 180, 188, -1, sizeof(::wanderer::proto::Level_AssociationsEntry_DoNotUse)},
  { 190, 224, -1, sizeof(::wanderer::proto::Level)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_TilesetsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_MovablesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_DrawablesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_AnimationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_PlantsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_TilesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_TileAnimationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_ChasesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_ParticlesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_LightsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_SpawnpointsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_HitboxesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_ObjectsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_PortalsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_TileLayersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_InventoriesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_TileObjectsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_TriggersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_AssociationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wanderer::proto::_Level_default_instance_),
};

const char descriptor_table_protodef_level_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013level.proto\022\016wanderer.proto\032\017animation"
  ".proto\032\027associated_entity.proto\032\013chase.p"
  "roto\032\016drawable.proto\032\014hitbox.proto\032\017inve"
  "ntory.proto\032\020map_object.proto\032\rmovable.p"
  "roto\032\016particle.proto\032\013plant.proto\032\021point"
  "_light.proto\032\014portal.proto\032\020spawnpoint.p"
  "roto\032\024tile_animation.proto\032\020tile_layer.p"
  "roto\032\ntile.proto\032\021tile_object.proto\032\rtil"
  "eset.proto\032\rtrigger.proto\"\327\026\n\005Level\022\017\n\002i"
  "d\030\001 \001(\005H\000\210\001\001\022!\n\024humanoid_layer_index\030\002 \001"
  "(\005H\001\210\001\001\022\026\n\trow_count\030\003 \001(\004H\002\210\001\001\022\031\n\014colum"
  "n_count\030\004 \001(\004H\003\210\001\001\022$\n\027keep_viewport_in_b"
  "ounds\030\005 \001(\010H\004\210\001\001\022\035\n\020is_outside_level\030\006 \001"
  "(\010H\005\210\001\001\022\032\n\rplayer_entity\030\036 \001(\rH\006\210\001\001\022\024\n\010e"
  "ntities\030\037 \003(\rB\002\020\001\022\025\n\thumanoids\030  \003(\rB\002\020\001"
  "\0225\n\010tilesets\030d \003(\0132#.wanderer.proto.Leve"
  "l.TilesetsEntry\0225\n\010movables\030( \003(\0132#.wand"
  "erer.proto.Level.MovablesEntry\0227\n\tdrawab"
  "les\030) \003(\0132$.wanderer.proto.Level.Drawabl"
  "esEntry\0229\n\nanimations\030* \003(\0132%.wanderer.p"
  "roto.Level.AnimationsEntry\0221\n\006plants\030+ \003"
  "(\0132!.wanderer.proto.Level.PlantsEntry\022/\n"
  "\005tiles\030, \003(\0132 .wanderer.proto.Level.Tile"
  "sEntry\022B\n\017tile_animations\030- \003(\0132).wander"
  "er.proto.Level.TileAnimationsEntry\0221\n\006ch"
  "ases\030. \003(\0132!.wanderer.proto.Level.Chases"
  "Entry\0227\n\tparticles\030/ \003(\0132$.wanderer.prot"
  "o.Level.ParticlesEntry\0221\n\006lights\0300 \003(\0132!"
  ".wanderer.proto.Level.LightsEntry\022;\n\013spa"
  "wnpoints\0301 \003(\0132&.wanderer.proto.Level.Sp"
  "awnpointsEntry\0225\n\010hitboxes\0302 \003(\0132#.wande"
  "rer.proto.Level.HitboxesEntry\0223\n\007objects"
  "\0303 \003(\0132\".wanderer.proto.Level.ObjectsEnt"
  "ry\0223\n\007portals\0304 \003(\0132\".wanderer.proto.Lev"
  "el.PortalsEntry\022:\n\013tile_layers\0305 \003(\0132%.w"
  "anderer.proto.Level.TileLayersEntry\022;\n\013i"
  "nventories\0306 \003(\0132&.wanderer.proto.Level."
  "InventoriesEntry\022<\n\014tile_objects\0307 \003(\0132&"
  ".wanderer.proto.Level.TileObjectsEntry\0225"
  "\n\010triggers\0308 \003(\0132#.wanderer.proto.Level."
  "TriggersEntry\022=\n\014associations\0309 \003(\0132\'.wa"
  "nderer.proto.Level.AssociationsEntry\032H\n\r"
  "TilesetsEntry\022\013\n\003key\030\001 \001(\r\022&\n\005value\030\002 \001("
  "\0132\027.wanderer.proto.Tileset:\0028\001\032H\n\rMovabl"
  "esEntry\022\013\n\003key\030\001 \001(\r\022&\n\005value\030\002 \001(\0132\027.wa"
  "nderer.proto.Movable:\0028\001\032J\n\016DrawablesEnt"
  "ry\022\013\n\003key\030\001 \001(\r\022\'\n\005value\030\002 \001(\0132\030.wandere"
  "r.proto.Drawable:\0028\001\032L\n\017AnimationsEntry\022"
  "\013\n\003key\030\001 \001(\r\022(\n\005value\030\002 \001(\0132\031.wanderer.p"
  "roto.Animation:\0028\001\032D\n\013PlantsEntry\022\013\n\003key"
  "\030\001 \001(\r\022$\n\005value\030\002 \001(\0132\025.wanderer.proto.P"
  "lant:\0028\001\032B\n\nTilesEntry\022\013\n\003key\030\001 \001(\r\022#\n\005v"
  "alue\030\002 \001(\0132\024.wanderer.proto.Tile:\0028\001\032T\n\023"
  "TileAnimationsEntry\022\013\n\003key\030\001 \001(\r\022,\n\005valu"
  "e\030\002 \001(\0132\035.wanderer.proto.TileAnimation:\002"
  "8\001\032D\n\013ChasesEntry\022\013\n\003key\030\001 \001(\r\022$\n\005value\030"
  "\002 \001(\0132\025.wanderer.proto.Chase:\0028\001\032J\n\016Part"
  "iclesEntry\022\013\n\003key\030\001 \001(\r\022\'\n\005value\030\002 \001(\0132\030"
  ".wanderer.proto.Particle:\0028\001\032I\n\013LightsEn"
  "try\022\013\n\003key\030\001 \001(\r\022)\n\005value\030\002 \001(\0132\032.wander"
  "er.proto.PointLight:\0028\001\032N\n\020SpawnpointsEn"
  "try\022\013\n\003key\030\001 \001(\r\022)\n\005value\030\002 \001(\0132\032.wander"
  "er.proto.Spawnpoint:\0028\001\032G\n\rHitboxesEntry"
  "\022\013\n\003key\030\001 \001(\r\022%\n\005value\030\002 \001(\0132\026.wanderer."
  "proto.Hitbox:\0028\001\032I\n\014ObjectsEntry\022\013\n\003key\030"
  "\001 \001(\r\022(\n\005value\030\002 \001(\0132\031.wanderer.proto.Ma"
  "pObject:\0028\001\032F\n\014PortalsEntry\022\013\n\003key\030\001 \001(\r"
  "\022%\n\005value\030\002 \001(\0132\026.wanderer.proto.Portal:"
  "\0028\001\032L\n\017TileLayersEntry\022\013\n\003key\030\001 \001(\r\022(\n\005v"
  "alue\030\002 \001(\0132\031.wanderer.proto.TileLayer:\0028"
  "\001\032M\n\020InventoriesEntry\022\013\n\003key\030\001 \001(\r\022(\n\005va"
  "lue\030\002 \001(\0132\031.wanderer.proto.Inventory:\0028\001"
  "\032N\n\020TileObjectsEntry\022\013\n\003key\030\001 \001(\r\022)\n\005val"
  "ue\030\002 \001(\0132\032.wanderer.proto.TileObject:\0028\001"
  "\032H\n\rTriggersEntry\022\013\n\003key\030\001 \001(\r\022&\n\005value\030"
  "\002 \001(\0132\027.wanderer.proto.Trigger:\0028\001\032U\n\021As"
  "sociationsEntry\022\013\n\003key\030\001 \001(\r\022/\n\005value\030\002 "
  "\001(\0132 .wanderer.proto.AssociatedEntity:\0028"
  "\001B\005\n\003_idB\027\n\025_humanoid_layer_indexB\014\n\n_ro"
  "w_countB\017\n\r_column_countB\032\n\030_keep_viewpo"
  "rt_in_boundsB\023\n\021_is_outside_levelB\020\n\016_pl"
  "ayer_entityb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_level_2eproto_deps[19] = {
  &::descriptor_table_animation_2eproto,
  &::descriptor_table_associated_5fentity_2eproto,
  &::descriptor_table_chase_2eproto,
  &::descriptor_table_drawable_2eproto,
  &::descriptor_table_hitbox_2eproto,
  &::descriptor_table_inventory_2eproto,
  &::descriptor_table_map_5fobject_2eproto,
  &::descriptor_table_movable_2eproto,
  &::descriptor_table_particle_2eproto,
  &::descriptor_table_plant_2eproto,
  &::descriptor_table_point_5flight_2eproto,
  &::descriptor_table_portal_2eproto,
  &::descriptor_table_spawnpoint_2eproto,
  &::descriptor_table_tile_2eproto,
  &::descriptor_table_tile_5fanimation_2eproto,
  &::descriptor_table_tile_5flayer_2eproto,
  &::descriptor_table_tile_5fobject_2eproto,
  &::descriptor_table_tileset_2eproto,
  &::descriptor_table_trigger_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_level_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_level_2eproto = {
  false, false, 3259, descriptor_table_protodef_level_2eproto, "level.proto", 
  &descriptor_table_level_2eproto_once, descriptor_table_level_2eproto_deps, 19, 20,
  schemas, file_default_instances, TableStruct_level_2eproto::offsets,
  file_level_metadata_level_2eproto, file_level_enum_descriptors_level_2eproto, file_level_service_descriptors_level_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_level_2eproto_getter() {
  return &descriptor_table_level_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_level_2eproto(&descriptor_table_level_2eproto);
namespace wanderer {
namespace proto {

// ===================================================================

Level_TilesetsEntry_DoNotUse::Level_TilesetsEntry_DoNotUse() {}
Level_TilesetsEntry_DoNotUse::Level_TilesetsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_TilesetsEntry_DoNotUse::MergeFrom(const Level_TilesetsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_TilesetsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[0]);
}

// ===================================================================

Level_MovablesEntry_DoNotUse::Level_MovablesEntry_DoNotUse() {}
Level_MovablesEntry_DoNotUse::Level_MovablesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_MovablesEntry_DoNotUse::MergeFrom(const Level_MovablesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_MovablesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[1]);
}

// ===================================================================

Level_DrawablesEntry_DoNotUse::Level_DrawablesEntry_DoNotUse() {}
Level_DrawablesEntry_DoNotUse::Level_DrawablesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_DrawablesEntry_DoNotUse::MergeFrom(const Level_DrawablesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_DrawablesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[2]);
}

// ===================================================================

Level_AnimationsEntry_DoNotUse::Level_AnimationsEntry_DoNotUse() {}
Level_AnimationsEntry_DoNotUse::Level_AnimationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_AnimationsEntry_DoNotUse::MergeFrom(const Level_AnimationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_AnimationsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[3]);
}

// ===================================================================

Level_PlantsEntry_DoNotUse::Level_PlantsEntry_DoNotUse() {}
Level_PlantsEntry_DoNotUse::Level_PlantsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_PlantsEntry_DoNotUse::MergeFrom(const Level_PlantsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_PlantsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[4]);
}

// ===================================================================

Level_TilesEntry_DoNotUse::Level_TilesEntry_DoNotUse() {}
Level_TilesEntry_DoNotUse::Level_TilesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_TilesEntry_DoNotUse::MergeFrom(const Level_TilesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_TilesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[5]);
}

// ===================================================================

Level_TileAnimationsEntry_DoNotUse::Level_TileAnimationsEntry_DoNotUse() {}
Level_TileAnimationsEntry_DoNotUse::Level_TileAnimationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_TileAnimationsEntry_DoNotUse::MergeFrom(const Level_TileAnimationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_TileAnimationsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[6]);
}

// ===================================================================

Level_ChasesEntry_DoNotUse::Level_ChasesEntry_DoNotUse() {}
Level_ChasesEntry_DoNotUse::Level_ChasesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_ChasesEntry_DoNotUse::MergeFrom(const Level_ChasesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_ChasesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[7]);
}

// ===================================================================

Level_ParticlesEntry_DoNotUse::Level_ParticlesEntry_DoNotUse() {}
Level_ParticlesEntry_DoNotUse::Level_ParticlesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_ParticlesEntry_DoNotUse::MergeFrom(const Level_ParticlesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_ParticlesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[8]);
}

// ===================================================================

Level_LightsEntry_DoNotUse::Level_LightsEntry_DoNotUse() {}
Level_LightsEntry_DoNotUse::Level_LightsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_LightsEntry_DoNotUse::MergeFrom(const Level_LightsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_LightsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[9]);
}

// ===================================================================

Level_SpawnpointsEntry_DoNotUse::Level_SpawnpointsEntry_DoNotUse() {}
Level_SpawnpointsEntry_DoNotUse::Level_SpawnpointsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_SpawnpointsEntry_DoNotUse::MergeFrom(const Level_SpawnpointsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_SpawnpointsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[10]);
}

// ===================================================================

Level_HitboxesEntry_DoNotUse::Level_HitboxesEntry_DoNotUse() {}
Level_HitboxesEntry_DoNotUse::Level_HitboxesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_HitboxesEntry_DoNotUse::MergeFrom(const Level_HitboxesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_HitboxesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[11]);
}

// ===================================================================

Level_ObjectsEntry_DoNotUse::Level_ObjectsEntry_DoNotUse() {}
Level_ObjectsEntry_DoNotUse::Level_ObjectsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_ObjectsEntry_DoNotUse::MergeFrom(const Level_ObjectsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_ObjectsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[12]);
}

// ===================================================================

Level_PortalsEntry_DoNotUse::Level_PortalsEntry_DoNotUse() {}
Level_PortalsEntry_DoNotUse::Level_PortalsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_PortalsEntry_DoNotUse::MergeFrom(const Level_PortalsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_PortalsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[13]);
}

// ===================================================================

Level_TileLayersEntry_DoNotUse::Level_TileLayersEntry_DoNotUse() {}
Level_TileLayersEntry_DoNotUse::Level_TileLayersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_TileLayersEntry_DoNotUse::MergeFrom(const Level_TileLayersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_TileLayersEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[14]);
}

// ===================================================================

Level_InventoriesEntry_DoNotUse::Level_InventoriesEntry_DoNotUse() {}
Level_InventoriesEntry_DoNotUse::Level_InventoriesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_InventoriesEntry_DoNotUse::MergeFrom(const Level_InventoriesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_InventoriesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[15]);
}

// ===================================================================

Level_TileObjectsEntry_DoNotUse::Level_TileObjectsEntry_DoNotUse() {}
Level_TileObjectsEntry_DoNotUse::Level_TileObjectsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_TileObjectsEntry_DoNotUse::MergeFrom(const Level_TileObjectsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_TileObjectsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[16]);
}

// ===================================================================

Level_TriggersEntry_DoNotUse::Level_TriggersEntry_DoNotUse() {}
Level_TriggersEntry_DoNotUse::Level_TriggersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_TriggersEntry_DoNotUse::MergeFrom(const Level_TriggersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_TriggersEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[17]);
}

// ===================================================================

Level_AssociationsEntry_DoNotUse::Level_AssociationsEntry_DoNotUse() {}
Level_AssociationsEntry_DoNotUse::Level_AssociationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Level_AssociationsEntry_DoNotUse::MergeFrom(const Level_AssociationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Level_AssociationsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[18]);
}

// ===================================================================

class Level::_Internal {
 public:
  using HasBits = decltype(std::declval<Level>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_humanoid_layer_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_row_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_column_count(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_keep_viewport_in_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_is_outside_level(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_player_entity(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

void Level::clear_tilesets() {
  tilesets_.Clear();
}
void Level::clear_movables() {
  movables_.Clear();
}
void Level::clear_drawables() {
  drawables_.Clear();
}
void Level::clear_animations() {
  animations_.Clear();
}
void Level::clear_plants() {
  plants_.Clear();
}
void Level::clear_tiles() {
  tiles_.Clear();
}
void Level::clear_tile_animations() {
  tile_animations_.Clear();
}
void Level::clear_chases() {
  chases_.Clear();
}
void Level::clear_particles() {
  particles_.Clear();
}
void Level::clear_lights() {
  lights_.Clear();
}
void Level::clear_spawnpoints() {
  spawnpoints_.Clear();
}
void Level::clear_hitboxes() {
  hitboxes_.Clear();
}
void Level::clear_objects() {
  objects_.Clear();
}
void Level::clear_portals() {
  portals_.Clear();
}
void Level::clear_tile_layers() {
  tile_layers_.Clear();
}
void Level::clear_inventories() {
  inventories_.Clear();
}
void Level::clear_tile_objects() {
  tile_objects_.Clear();
}
void Level::clear_triggers() {
  triggers_.Clear();
}
void Level::clear_associations() {
  associations_.Clear();
}
Level::Level(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entities_(arena),
  humanoids_(arena),
  movables_(arena),
  drawables_(arena),
  animations_(arena),
  plants_(arena),
  tiles_(arena),
  tile_animations_(arena),
  chases_(arena),
  particles_(arena),
  lights_(arena),
  spawnpoints_(arena),
  hitboxes_(arena),
  objects_(arena),
  portals_(arena),
  tile_layers_(arena),
  inventories_(arena),
  tile_objects_(arena),
  triggers_(arena),
  associations_(arena),
  tilesets_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wanderer.proto.Level)
}
Level::Level(const Level& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      entities_(from.entities_),
      humanoids_(from.humanoids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  movables_.MergeFrom(from.movables_);
  drawables_.MergeFrom(from.drawables_);
  animations_.MergeFrom(from.animations_);
  plants_.MergeFrom(from.plants_);
  tiles_.MergeFrom(from.tiles_);
  tile_animations_.MergeFrom(from.tile_animations_);
  chases_.MergeFrom(from.chases_);
  particles_.MergeFrom(from.particles_);
  lights_.MergeFrom(from.lights_);
  spawnpoints_.MergeFrom(from.spawnpoints_);
  hitboxes_.MergeFrom(from.hitboxes_);
  objects_.MergeFrom(from.objects_);
  portals_.MergeFrom(from.portals_);
  tile_layers_.MergeFrom(from.tile_layers_);
  inventories_.MergeFrom(from.inventories_);
  tile_objects_.MergeFrom(from.tile_objects_);
  triggers_.MergeFrom(from.triggers_);
  associations_.MergeFrom(from.associations_);
  tilesets_.MergeFrom(from.tilesets_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_entity_) -
    reinterpret_cast<char*>(&id_)) + sizeof(player_entity_));
  // @@protoc_insertion_point(copy_constructor:wanderer.proto.Level)
}

void Level::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&player_entity_) -
    reinterpret_cast<char*>(&id_)) + sizeof(player_entity_));
}

Level::~Level() {
  // @@protoc_insertion_point(destructor:wanderer.proto.Level)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Level::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Level::ArenaDtor(void* object) {
  Level* _this = reinterpret_cast< Level* >(object);
  (void)_this;
  _this->movables_. ~MapField();
  _this->drawables_. ~MapField();
  _this->animations_. ~MapField();
  _this->plants_. ~MapField();
  _this->tiles_. ~MapField();
  _this->tile_animations_. ~MapField();
  _this->chases_. ~MapField();
  _this->particles_. ~MapField();
  _this->lights_. ~MapField();
  _this->spawnpoints_. ~MapField();
  _this->hitboxes_. ~MapField();
  _this->objects_. ~MapField();
  _this->portals_. ~MapField();
  _this->tile_layers_. ~MapField();
  _this->inventories_. ~MapField();
  _this->tile_objects_. ~MapField();
  _this->triggers_. ~MapField();
  _this->associations_. ~MapField();
  _this->tilesets_. ~MapField();
}
inline void Level::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Level::ArenaDtor);
  }
}
void Level::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Level::Clear() {
// @@protoc_insertion_point(message_clear_start:wanderer.proto.Level)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entities_.Clear();
  humanoids_.Clear();
  movables_.Clear();
  drawables_.Clear();
  animations_.Clear();
  plants_.Clear();
  tiles_.Clear();
  tile_animations_.Clear();
  chases_.Clear();
  particles_.Clear();
  lights_.Clear();
  spawnpoints_.Clear();
  hitboxes_.Clear();
  objects_.Clear();
  portals_.Clear();
  tile_layers_.Clear();
  inventories_.Clear();
  tile_objects_.Clear();
  triggers_.Clear();
  associations_.Clear();
  tilesets_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&player_entity_) -
        reinterpret_cast<char*>(&id_)) + sizeof(player_entity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Level::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 humanoid_layer_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_humanoid_layer_index(&has_bits);
          humanoid_layer_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 row_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_row_count(&has_bits);
          row_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 column_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_column_count(&has_bits);
          column_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool keep_viewport_in_bounds = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_keep_viewport_in_bounds(&has_bits);
          keep_viewport_in_bounds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool is_outside_level = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_is_outside_level(&has_bits);
          is_outside_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 player_entity = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_player_entity(&has_bits);
          player_entity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 entities = 31 [packed = true];
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_entities(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248) {
          _internal_add_entities(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 humanoids = 32 [packed = true];
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_humanoids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0) {
          _internal_add_humanoids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Movable> movables = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&movables_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<322>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Drawable> drawables = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&drawables_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<330>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Animation> animations = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&animations_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<338>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Plant> plants = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&plants_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<346>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Tile> tiles = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&tiles_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<354>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.TileAnimation> tile_animations = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&tile_animations_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<362>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Chase> chases = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&chases_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<370>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Particle> particles = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&particles_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<378>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.PointLight> lights = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&lights_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<386>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Spawnpoint> spawnpoints = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&spawnpoints_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<394>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Hitbox> hitboxes = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&hitboxes_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<402>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.MapObject> objects = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&objects_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<410>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Portal> portals = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&portals_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<418>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.TileLayer> tile_layers = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&tile_layers_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<426>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Inventory> inventories = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&inventories_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<434>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.TileObject> tile_objects = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&tile_objects_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<442>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Trigger> triggers = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&triggers_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<450>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.AssociatedEntity> associations = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&associations_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<458>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .wanderer.proto.Tileset> tilesets = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&tilesets_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<802>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Level::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wanderer.proto.Level)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 id = 1;
  if (_internal_has_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // optional int32 humanoid_layer_index = 2;
  if (_internal_has_humanoid_layer_index()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_humanoid_layer_index(), target);
  }

  // optional uint64 row_count = 3;
  if (_internal_has_row_count()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_row_count(), target);
  }

  // optional uint64 column_count = 4;
  if (_internal_has_column_count()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_column_count(), target);
  }

  // optional bool keep_viewport_in_bounds = 5;
  if (_internal_has_keep_viewport_in_bounds()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_keep_viewport_in_bounds(), target);
  }

  // optional bool is_outside_level = 6;
  if (_internal_has_is_outside_level()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_is_outside_level(), target);
  }

  // optional uint32 player_entity = 30;
  if (_internal_has_player_entity()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(30, this->_internal_player_entity(), target);
  }

  // repeated uint32 entities = 31 [packed = true];
  {
    int byte_size = _entities_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          31, _internal_entities(), byte_size, target);
    }
  }

  // repeated uint32 humanoids = 32 [packed = true];
  {
    int byte_size = _humanoids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          32, _internal_humanoids(), byte_size, target);
    }
  }

  // map<uint32, .wanderer.proto.Movable> movables = 40;
  if (!this->_internal_movables().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Movable >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_movables().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_movables().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Movable >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Movable >::const_iterator
          it = this->_internal_movables().begin();
          it != this->_internal_movables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_MovablesEntry_DoNotUse::Funcs::InternalSerialize(40, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Movable >::const_iterator
          it = this->_internal_movables().begin();
          it != this->_internal_movables().end(); ++it) {
        target = Level_MovablesEntry_DoNotUse::Funcs::InternalSerialize(40, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Drawable> drawables = 41;
  if (!this->_internal_drawables().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Drawable >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_drawables().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_drawables().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Drawable >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Drawable >::const_iterator
          it = this->_internal_drawables().begin();
          it != this->_internal_drawables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_DrawablesEntry_DoNotUse::Funcs::InternalSerialize(41, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Drawable >::const_iterator
          it = this->_internal_drawables().begin();
          it != this->_internal_drawables().end(); ++it) {
        target = Level_DrawablesEntry_DoNotUse::Funcs::InternalSerialize(41, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Animation> animations = 42;
  if (!this->_internal_animations().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Animation >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_animations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_animations().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Animation >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Animation >::const_iterator
          it = this->_internal_animations().begin();
          it != this->_internal_animations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_AnimationsEntry_DoNotUse::Funcs::InternalSerialize(42, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Animation >::const_iterator
          it = this->_internal_animations().begin();
          it != this->_internal_animations().end(); ++it) {
        target = Level_AnimationsEntry_DoNotUse::Funcs::InternalSerialize(42, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Plant> plants = 43;
  if (!this->_internal_plants().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Plant >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_plants().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_plants().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Plant >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Plant >::const_iterator
          it = this->_internal_plants().begin();
          it != this->_internal_plants().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_PlantsEntry_DoNotUse::Funcs::InternalSerialize(43, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Plant >::const_iterator
          it = this->_internal_plants().begin();
          it != this->_internal_plants().end(); ++it) {
        target = Level_PlantsEntry_DoNotUse::Funcs::InternalSerialize(43, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Tile> tiles = 44;
  if (!this->_internal_tiles().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Tile >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tiles().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tiles().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Tile >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Tile >::const_iterator
          it = this->_internal_tiles().begin();
          it != this->_internal_tiles().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_TilesEntry_DoNotUse::Funcs::InternalSerialize(44, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Tile >::const_iterator
          it = this->_internal_tiles().begin();
          it != this->_internal_tiles().end(); ++it) {
        target = Level_TilesEntry_DoNotUse::Funcs::InternalSerialize(44, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.TileAnimation> tile_animations = 45;
  if (!this->_internal_tile_animations().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileAnimation >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tile_animations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tile_animations().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileAnimation >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileAnimation >::const_iterator
          it = this->_internal_tile_animations().begin();
          it != this->_internal_tile_animations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_TileAnimationsEntry_DoNotUse::Funcs::InternalSerialize(45, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileAnimation >::const_iterator
          it = this->_internal_tile_animations().begin();
          it != this->_internal_tile_animations().end(); ++it) {
        target = Level_TileAnimationsEntry_DoNotUse::Funcs::InternalSerialize(45, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Chase> chases = 46;
  if (!this->_internal_chases().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Chase >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_chases().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_chases().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Chase >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Chase >::const_iterator
          it = this->_internal_chases().begin();
          it != this->_internal_chases().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_ChasesEntry_DoNotUse::Funcs::InternalSerialize(46, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Chase >::const_iterator
          it = this->_internal_chases().begin();
          it != this->_internal_chases().end(); ++it) {
        target = Level_ChasesEntry_DoNotUse::Funcs::InternalSerialize(46, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Particle> particles = 47;
  if (!this->_internal_particles().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Particle >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_particles().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_particles().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Particle >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Particle >::const_iterator
          it = this->_internal_particles().begin();
          it != this->_internal_particles().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_ParticlesEntry_DoNotUse::Funcs::InternalSerialize(47, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Particle >::const_iterator
          it = this->_internal_particles().begin();
          it != this->_internal_particles().end(); ++it) {
        target = Level_ParticlesEntry_DoNotUse::Funcs::InternalSerialize(47, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.PointLight> lights = 48;
  if (!this->_internal_lights().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::PointLight >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_lights().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_lights().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::PointLight >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::PointLight >::const_iterator
          it = this->_internal_lights().begin();
          it != this->_internal_lights().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_LightsEntry_DoNotUse::Funcs::InternalSerialize(48, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::PointLight >::const_iterator
          it = this->_internal_lights().begin();
          it != this->_internal_lights().end(); ++it) {
        target = Level_LightsEntry_DoNotUse::Funcs::InternalSerialize(48, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Spawnpoint> spawnpoints = 49;
  if (!this->_internal_spawnpoints().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Spawnpoint >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_spawnpoints().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_spawnpoints().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Spawnpoint >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Spawnpoint >::const_iterator
          it = this->_internal_spawnpoints().begin();
          it != this->_internal_spawnpoints().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_SpawnpointsEntry_DoNotUse::Funcs::InternalSerialize(49, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Spawnpoint >::const_iterator
          it = this->_internal_spawnpoints().begin();
          it != this->_internal_spawnpoints().end(); ++it) {
        target = Level_SpawnpointsEntry_DoNotUse::Funcs::InternalSerialize(49, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Hitbox> hitboxes = 50;
  if (!this->_internal_hitboxes().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Hitbox >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_hitboxes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_hitboxes().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Hitbox >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Hitbox >::const_iterator
          it = this->_internal_hitboxes().begin();
          it != this->_internal_hitboxes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_HitboxesEntry_DoNotUse::Funcs::InternalSerialize(50, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Hitbox >::const_iterator
          it = this->_internal_hitboxes().begin();
          it != this->_internal_hitboxes().end(); ++it) {
        target = Level_HitboxesEntry_DoNotUse::Funcs::InternalSerialize(50, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.MapObject> objects = 51;
  if (!this->_internal_objects().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::MapObject >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_objects().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_objects().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::MapObject >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::MapObject >::const_iterator
          it = this->_internal_objects().begin();
          it != this->_internal_objects().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_ObjectsEntry_DoNotUse::Funcs::InternalSerialize(51, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::MapObject >::const_iterator
          it = this->_internal_objects().begin();
          it != this->_internal_objects().end(); ++it) {
        target = Level_ObjectsEntry_DoNotUse::Funcs::InternalSerialize(51, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Portal> portals = 52;
  if (!this->_internal_portals().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Portal >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_portals().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_portals().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Portal >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Portal >::const_iterator
          it = this->_internal_portals().begin();
          it != this->_internal_portals().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_PortalsEntry_DoNotUse::Funcs::InternalSerialize(52, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Portal >::const_iterator
          it = this->_internal_portals().begin();
          it != this->_internal_portals().end(); ++it) {
        target = Level_PortalsEntry_DoNotUse::Funcs::InternalSerialize(52, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.TileLayer> tile_layers = 53;
  if (!this->_internal_tile_layers().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileLayer >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tile_layers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tile_layers().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileLayer >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileLayer >::const_iterator
          it = this->_internal_tile_layers().begin();
          it != this->_internal_tile_layers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_TileLayersEntry_DoNotUse::Funcs::InternalSerialize(53, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileLayer >::const_iterator
          it = this->_internal_tile_layers().begin();
          it != this->_internal_tile_layers().end(); ++it) {
        target = Level_TileLayersEntry_DoNotUse::Funcs::InternalSerialize(53, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Inventory> inventories = 54;
  if (!this->_internal_inventories().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Inventory >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_inventories().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_inventories().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Inventory >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Inventory >::const_iterator
          it = this->_internal_inventories().begin();
          it != this->_internal_inventories().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_InventoriesEntry_DoNotUse::Funcs::InternalSerialize(54, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Inventory >::const_iterator
          it = this->_internal_inventories().begin();
          it != this->_internal_inventories().end(); ++it) {
        target = Level_InventoriesEntry_DoNotUse::Funcs::InternalSerialize(54, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.TileObject> tile_objects = 55;
  if (!this->_internal_tile_objects().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileObject >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tile_objects().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tile_objects().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileObject >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileObject >::const_iterator
          it = this->_internal_tile_objects().begin();
          it != this->_internal_tile_objects().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_TileObjectsEntry_DoNotUse::Funcs::InternalSerialize(55, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileObject >::const_iterator
          it = this->_internal_tile_objects().begin();
          it != this->_internal_tile_objects().end(); ++it) {
        target = Level_TileObjectsEntry_DoNotUse::Funcs::InternalSerialize(55, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Trigger> triggers = 56;
  if (!this->_internal_triggers().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Trigger >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_triggers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_triggers().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Trigger >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Trigger >::const_iterator
          it = this->_internal_triggers().begin();
          it != this->_internal_triggers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_TriggersEntry_DoNotUse::Funcs::InternalSerialize(56, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Trigger >::const_iterator
          it = this->_internal_triggers().begin();
          it != this->_internal_triggers().end(); ++it) {
        target = Level_TriggersEntry_DoNotUse::Funcs::InternalSerialize(56, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.AssociatedEntity> associations = 57;
  if (!this->_internal_associations().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::AssociatedEntity >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_associations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_associations().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::AssociatedEntity >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::AssociatedEntity >::const_iterator
          it = this->_internal_associations().begin();
          it != this->_internal_associations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_AssociationsEntry_DoNotUse::Funcs::InternalSerialize(57, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::AssociatedEntity >::const_iterator
          it = this->_internal_associations().begin();
          it != this->_internal_associations().end(); ++it) {
        target = Level_AssociationsEntry_DoNotUse::Funcs::InternalSerialize(57, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .wanderer.proto.Tileset> tilesets = 100;
  if (!this->_internal_tilesets().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Tileset >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_tilesets().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_tilesets().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Tileset >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Tileset >::const_iterator
          it = this->_internal_tilesets().begin();
          it != this->_internal_tilesets().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Level_TilesetsEntry_DoNotUse::Funcs::InternalSerialize(100, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Tileset >::const_iterator
          it = this->_internal_tilesets().begin();
          it != this->_internal_tilesets().end(); ++it) {
        target = Level_TilesetsEntry_DoNotUse::Funcs::InternalSerialize(100, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wanderer.proto.Level)
  return target;
}

size_t Level::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wanderer.proto.Level)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 entities = 31 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->entities_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _entities_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 humanoids = 32 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->humanoids_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _humanoids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<uint32, .wanderer.proto.Movable> movables = 40;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_movables_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Movable >::const_iterator
      it = this->_internal_movables().begin();
      it != this->_internal_movables().end(); ++it) {
    total_size += Level_MovablesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Drawable> drawables = 41;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_drawables_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Drawable >::const_iterator
      it = this->_internal_drawables().begin();
      it != this->_internal_drawables().end(); ++it) {
    total_size += Level_DrawablesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Animation> animations = 42;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_animations_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Animation >::const_iterator
      it = this->_internal_animations().begin();
      it != this->_internal_animations().end(); ++it) {
    total_size += Level_AnimationsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Plant> plants = 43;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_plants_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Plant >::const_iterator
      it = this->_internal_plants().begin();
      it != this->_internal_plants().end(); ++it) {
    total_size += Level_PlantsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Tile> tiles = 44;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tiles_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Tile >::const_iterator
      it = this->_internal_tiles().begin();
      it != this->_internal_tiles().end(); ++it) {
    total_size += Level_TilesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.TileAnimation> tile_animations = 45;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tile_animations_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileAnimation >::const_iterator
      it = this->_internal_tile_animations().begin();
      it != this->_internal_tile_animations().end(); ++it) {
    total_size += Level_TileAnimationsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Chase> chases = 46;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_chases_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Chase >::const_iterator
      it = this->_internal_chases().begin();
      it != this->_internal_chases().end(); ++it) {
    total_size += Level_ChasesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Particle> particles = 47;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_particles_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Particle >::const_iterator
      it = this->_internal_particles().begin();
      it != this->_internal_particles().end(); ++it) {
    total_size += Level_ParticlesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.PointLight> lights = 48;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_lights_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::PointLight >::const_iterator
      it = this->_internal_lights().begin();
      it != this->_internal_lights().end(); ++it) {
    total_size += Level_LightsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Spawnpoint> spawnpoints = 49;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_spawnpoints_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Spawnpoint >::const_iterator
      it = this->_internal_spawnpoints().begin();
      it != this->_internal_spawnpoints().end(); ++it) {
    total_size += Level_SpawnpointsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Hitbox> hitboxes = 50;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_hitboxes_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Hitbox >::const_iterator
      it = this->_internal_hitboxes().begin();
      it != this->_internal_hitboxes().end(); ++it) {
    total_size += Level_HitboxesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.MapObject> objects = 51;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_objects_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::MapObject >::const_iterator
      it = this->_internal_objects().begin();
      it != this->_internal_objects().end(); ++it) {
    total_size += Level_ObjectsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Portal> portals = 52;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_portals_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Portal >::const_iterator
      it = this->_internal_portals().begin();
      it != this->_internal_portals().end(); ++it) {
    total_size += Level_PortalsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.TileLayer> tile_layers = 53;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tile_layers_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileLayer >::const_iterator
      it = this->_internal_tile_layers().begin();
      it != this->_internal_tile_layers().end(); ++it) {
    total_size += Level_TileLayersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Inventory> inventories = 54;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_inventories_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Inventory >::const_iterator
      it = this->_internal_inventories().begin();
      it != this->_internal_inventories().end(); ++it) {
    total_size += Level_InventoriesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.TileObject> tile_objects = 55;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tile_objects_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::TileObject >::const_iterator
      it = this->_internal_tile_objects().begin();
      it != this->_internal_tile_objects().end(); ++it) {
    total_size += Level_TileObjectsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Trigger> triggers = 56;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_triggers_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Trigger >::const_iterator
      it = this->_internal_triggers().begin();
      it != this->_internal_triggers().end(); ++it) {
    total_size += Level_TriggersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.AssociatedEntity> associations = 57;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_associations_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::AssociatedEntity >::const_iterator
      it = this->_internal_associations().begin();
      it != this->_internal_associations().end(); ++it) {
    total_size += Level_AssociationsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .wanderer.proto.Tileset> tilesets = 100;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tilesets_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::wanderer::proto::Tileset >::const_iterator
      it = this->_internal_tilesets().begin();
      it != this->_internal_tilesets().end(); ++it) {
    total_size += Level_TilesetsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional int32 id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_id());
    }

    // optional int32 humanoid_layer_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_humanoid_layer_index());
    }

    // optional uint64 row_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_row_count());
    }

    // optional uint64 column_count = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_column_count());
    }

    // optional bool keep_viewport_in_bounds = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool is_outside_level = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional uint32 player_entity = 30;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_player_entity());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Level::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Level::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Level::GetClassData() const { return &_class_data_; }

void Level::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Level *>(to)->MergeFrom(
      static_cast<const Level &>(from));
}


void Level::MergeFrom(const Level& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wanderer.proto.Level)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entities_.MergeFrom(from.entities_);
  humanoids_.MergeFrom(from.humanoids_);
  movables_.MergeFrom(from.movables_);
  drawables_.MergeFrom(from.drawables_);
  animations_.MergeFrom(from.animations_);
  plants_.MergeFrom(from.plants_);
  tiles_.MergeFrom(from.tiles_);
  tile_animations_.MergeFrom(from.tile_animations_);
  chases_.MergeFrom(from.chases_);
  particles_.MergeFrom(from.particles_);
  lights_.MergeFrom(from.lights_);
  spawnpoints_.MergeFrom(from.spawnpoints_);
  hitboxes_.MergeFrom(from.hitboxes_);
  objects_.MergeFrom(from.objects_);
  portals_.MergeFrom(from.portals_);
  tile_layers_.MergeFrom(from.tile_layers_);
  inventories_.MergeFrom(from.inventories_);
  tile_objects_.MergeFrom(from.tile_objects_);
  triggers_.MergeFrom(from.triggers_);
  associations_.MergeFrom(from.associations_);
  tilesets_.MergeFrom(from.tilesets_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      humanoid_layer_index_ = from.humanoid_layer_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      row_count_ = from.row_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      column_count_ = from.column_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      keep_viewport_in_bounds_ = from.keep_viewport_in_bounds_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_outside_level_ = from.is_outside_level_;
    }
    if (cached_has_bits & 0x00000040u) {
      player_entity_ = from.player_entity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Level::CopyFrom(const Level& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wanderer.proto.Level)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Level::IsInitialized() const {
  return true;
}

void Level::InternalSwap(Level* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  entities_.InternalSwap(&other->entities_);
  humanoids_.InternalSwap(&other->humanoids_);
  movables_.InternalSwap(&other->movables_);
  drawables_.InternalSwap(&other->drawables_);
  animations_.InternalSwap(&other->animations_);
  plants_.InternalSwap(&other->plants_);
  tiles_.InternalSwap(&other->tiles_);
  tile_animations_.InternalSwap(&other->tile_animations_);
  chases_.InternalSwap(&other->chases_);
  particles_.InternalSwap(&other->particles_);
  lights_.InternalSwap(&other->lights_);
  spawnpoints_.InternalSwap(&other->spawnpoints_);
  hitboxes_.InternalSwap(&other->hitboxes_);
  objects_.InternalSwap(&other->objects_);
  portals_.InternalSwap(&other->portals_);
  tile_layers_.InternalSwap(&other->tile_layers_);
  inventories_.InternalSwap(&other->inventories_);
  tile_objects_.InternalSwap(&other->tile_objects_);
  triggers_.InternalSwap(&other->triggers_);
  associations_.InternalSwap(&other->associations_);
  tilesets_.InternalSwap(&other->tilesets_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Level, player_entity_)
      + sizeof(Level::player_entity_)
      - PROTOBUF_FIELD_OFFSET(Level, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Level::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_level_2eproto_getter, &descriptor_table_level_2eproto_once,
      file_level_metadata_level_2eproto[19]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace wanderer
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_TilesetsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_TilesetsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_TilesetsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_MovablesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_MovablesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_MovablesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_DrawablesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_DrawablesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_DrawablesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_AnimationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_AnimationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_AnimationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_PlantsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_PlantsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_PlantsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_TilesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_TilesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_TilesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_TileAnimationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_TileAnimationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_TileAnimationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_ChasesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_ChasesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_ChasesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_ParticlesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_ParticlesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_ParticlesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_LightsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_LightsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_LightsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_SpawnpointsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_SpawnpointsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_SpawnpointsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_HitboxesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_HitboxesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_HitboxesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_ObjectsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_ObjectsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_ObjectsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_PortalsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_PortalsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_PortalsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_TileLayersEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_TileLayersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_TileLayersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_InventoriesEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_InventoriesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_InventoriesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_TileObjectsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_TileObjectsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_TileObjectsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_TriggersEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_TriggersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_TriggersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level_AssociationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::wanderer::proto::Level_AssociationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level_AssociationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::wanderer::proto::Level* Arena::CreateMaybeMessage< ::wanderer::proto::Level >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wanderer::proto::Level >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
