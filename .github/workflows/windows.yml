name: "CI: Windows"

on: [ push, pull_request ]

# See https://github.com/actions/virtual-environments/tree/main/images/win
env:
  BOOST_ROOT: ${{github.workspace}}\boost\boost_1_78_0
  BOOST_VERSION: 1.78.0
  BOOST_VERSION_IN_URL: 1_78_0
  BOOST_CACHE_EDITION: 1
  VCPKG_ROOT: ${{github.workspace}}\vcpkg
  VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}\vcpkg\bincache # https://github.com/microsoft/vcpkg/blob/master/docs/users/binarycaching.md#configuration
  VCPKG_COMMIT: b1642553ec6049bb5ccdf59bea6b4aaca1033e82
  VCPKG_CACHE_EDITION: 1
  VCPKG_DEFAULT_TRIPLET: x64-windows-static-md
  VCPKG_TARGET_TRIPLET: x64-windows-static-md

jobs:
  windows-test:
    runs-on: windows-latest
    if: contains(github.event.head_commit.message, '[skip-ci]') == false
    steps:
      - uses: actions/checkout@main
      - uses: ilammy/msvc-dev-cmd@master
      - uses: lukka/get-cmake@latest

      - name: Restore cached Boost
        id: restore-cached-boost
        uses: actions/cache@v2
        with:
          path: ${{env.BOOST_ROOT}}
          key: wanderer-windows-boost-${{env.BOOST_VERSION}}-${{env.BOOST_CACHE_EDITION}}

      - name: Install Boost
        if: steps.restore-cached-boost.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          mkdir boost
          cd boost
          Invoke-WebRequest -Uri "https://boostorg.jfrog.io/artifactory/main/release/${{env.BOOST_VERSION}}/source/boost_${{env.BOOST_VERSION_IN_URL}}.zip" `
                            -OutFile boost.zip
          7z x -y boost.zip

      - name: Restore cached Vcpkg
        id: restore-vcpkg-and-artifacts
        uses: actions/cache@v2
        with:
          path: |
            ${{env.VCPKG_ROOT}}
            !${{env.VCPKG_ROOT}}\buildtrees
            !${{env.VCPKG_ROOT}}\packages
            !${{env.VCPKG_ROOT}}\downloads
            !${{env.VCPKG_ROOT}}\installed
          key: wanderer-windows-vcpkg-${{hashFiles('vcpkg.json')}}-${{env.VCPKG_COMMIT}}-${{env.VCPKG_CACHE_EDITION}}

      - name: Install Vcpkg
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/microsoft/vcpkg
          cd vcpkg
          git fetch
          git checkout -b tmp-branch ${{env.VCPKG_COMMIT}}
          .\bootstrap-vcpkg.bat -disableMetrics
          .\vcpkg integrate install

      - name: Create Vcpkg binary cache directory
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        run: mkdir ${{env.VCPKG_DEFAULT_BINARY_CACHE}}

      - name: Create build directory
        run: mkdir build

      - name: Generate build files
        working-directory: ./build
        run: cmake .. -DCMAKE_BUILD_TYPE=Debug -GNinja

      - name: Build
        working-directory: ./build
        run: ninja

      - name: Run tests
        working-directory: ./build/test
        run: WandererTests.exe